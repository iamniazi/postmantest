{
	"info": {
		"_postman_id": "f97312b3-baf1-4bdf-8ddb-db40fdde9ef8",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Smoke Test Copy",
			"item": [
				{
					"name": "Identity",
					"item": [
						{
							"name": "Identity Sign Up",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" const response=pm.response.json();\r",
											"pm.test(\"Account Creation\", function () {\r",
											"   \r",
											"        pm.expect(response.statusCode,\"Status should be 200. \"+response.statusMessage).to.be.eql(200);\r",
											"});\r",
											" console.log(response.data);\r",
											"\r",
											"\r",
											"   \r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"gender\": 4,\n    \"phone\": \"occaecat laborum consequat cillum\",\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"lastName\": \"{{$randomLastName}}\",\n    \"jobTitle\": \"YOLO\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"Zeeshank124@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Identity/SignUp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Identity",
										"SignUp"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Identity/SignUp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Identity",
												"SignUp"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "reprehenderit sunt incididunt"
								}
							]
						},
						{
							"name": "Identity Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response=pm.response.json();\r",
											"pm.globals.set(\"authToken\",response.data.token);\r",
											"pm.globals.set(\"AccountOwnerRoleId\",\"1fe60545-c036-4f16-ae84-3339b0bbdb76\");\r",
											"pm.globals.set(\"UserIdFromDB\",\"6d231639-b3bc-46c0-8a34-98c3938c48e3\");\r",
											"pm.globals.set(\"AddBoardMemberRightIdDB\",\"3328e770-b640-41df-b5aa-d71250c46892\");\r",
											"pm.globals.set(\"CreateActivityRightIdDB\",\"5e40a88b-8be3-4f5a-85a7-951e72fd8432\");\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Successfully Logged In\",()=>{\r",
											"    pm.expect(response.statusMessage).to.be.eql(\"Login Successful!\");\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"test@live.com\",\n    \"password\": \"Test*1234\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Identity/Login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Identity",
										"Login"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Identity/Login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Identity",
												"Login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "reprehenderit sunt incididunt"
								}
							]
						}
					]
				},
				{
					"name": "Account, Account User and Account User Right",
					"item": [
						{
							"name": "Accounts Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response=pm.response.json();\r",
											"console.log(response.statusMessage);\r",
											"pm.test(\"Signup message is displayed\", ()=>{\r",
											"    pm.expect(response.statusMessage).to.be.eql(\"Signup Successful!\");\r",
											"    \r",
											"    \r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"switchCompany\": false,\n    \"vatId\": \"f6fb49af-e46a-4f34-92d5-e6a0f1d75e07\",\n    \"isActive\": true,\n    \"code\": \"aliquip culpa in magna\",\n    \"name\": \"TestingTesting\",\n    \"phone\": \"eu exercitation\",\n    \"logo\": \"labore proident\",\n    \"street\": \"ad dolor sint ex proident\",\n    \"city\": \"magna aliqua\",\n    \"state\": \"culpa enim dolor elit\",\n    \"zip\": \"cupidatat do Excepteur reprehenderit aliqua\",\n    \"countryCode\": \"laborum Duis\",\n    \"companySize\": \"Lorem magna\",\n    \"regNumber\": \"nulla\",\n    \"companyNumber\": \"officia mollit cillum ut\",\n    \"description\": \"adipisicing Lorem labore\",\n    \"url\": \"dolore in\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Accounts/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Accounts",
										"Create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"switchCompany\": false,\n    \"vatId\": \"id eu\",\n    \"isActive\": true,\n    \"parentAccountId\": \"ullamco aliqua ad laboris\",\n    \"code\": \"aliquip culpa in magna\",\n    \"name\": \"Excepteur ad do ea\",\n    \"phone\": \"eu exercitation\",\n    \"logo\": \"labore proident\",\n    \"street\": \"ad dolor sint ex proident\",\n    \"city\": \"magna aliqua\",\n    \"state\": \"culpa enim dolor elit\",\n    \"zip\": \"cupidatat do Excepteur reprehenderit aliqua\",\n    \"countryCode\": \"laborum Duis\",\n    \"companySize\": \"Lorem magna\",\n    \"regNumber\": \"nulla\",\n    \"companyNumber\": \"officia mollit cillum ut\",\n    \"description\": \"adipisicing Lorem labore\",\n    \"url\": \"dolore in\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Accounts/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Accounts",
												"Create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": 99001948,\n \"statusMessage\": \"in Ut adipisicing\",\n \"data\": {}\n}"
								}
							]
						},
						{
							"name": "Accounts Get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" let response=pm.response.json();\r",
											"\r",
											" pm.globals.set(\"AccountId\",response.id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"var users=response;\r",
											"var user=users[0];\r",
											"console.log(user);\r",
											"\r",
											"pm.test(\"type is javascript object\",()=>{\r",
											"pm.expect(user).to.be.an(\"object\");\r",
											"\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageNumber\": 10,\n    \"pageSize\": 2,\n    \"sortDirection\": 1,\n    \"keySearch\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Accounts/Get",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Accounts",
										"Get"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Accounts/Get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Accounts",
												"Get"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"commodo non\",\n  \"vatId\": \"amet consequat\",\n  \"isActive\": true,\n  \"parentAccountId\": \"non voluptate do\",\n  \"code\": \"fugiat magna\",\n  \"name\": \"aliquip cillum qui pariatur\",\n  \"phone\": \"deserunt in\",\n  \"logo\": \"ex magna qui\",\n  \"street\": \"sit qui exercitation\",\n  \"city\": \"ullamco exercitation\",\n  \"state\": \"Duis officia laboris\",\n  \"zip\": \"laborum aliqua in dolor\",\n  \"countryCode\": \"Ut cupidatat\",\n  \"companySize\": \"pariatur ad ipsum\",\n  \"regNumber\": \"magna irure dolor commodo\",\n  \"companyNumber\": \"ut quis\",\n  \"description\": \"su\",\n  \"url\": \"ex id sint\",\n  \"projects\": [\n   {\n    \"id\": \"et enim\",\n    \"accountId\": \"deserunt mollit voluptate aliquip proident\",\n    \"lat\": 55012232.58499047,\n    \"lng\": 58944875.9472965,\n    \"startDate\": \"1964-01-18T13:04:12.363Z\",\n    \"endDate\": \"2017-12-13T07:56:28.618Z\",\n    \"isActive\": false,\n    \"lateWarEnabled\": true,\n    \"earlyWarEnabled\": true,\n    \"lateWarPercentage\": 0,\n    \"lateWarMinHour\": -18870082.306913227,\n    \"earlyWarHour\": 8823351.370246664,\n    \"name\": \"pariatur exercitation ut quis\",\n    \"code\": \"veniam irure enim pariatur\",\n    \"imgUri\": \"nulla do \",\n    \"description\": \"est consectetur Duis eiusmod\",\n    \"street\": \"anim veniam Duis\",\n    \"country\": \"nisi incididunt Ut dolor\",\n    \"city\": \"enim incididunt minim\",\n    \"state\": \"amet mollit velit in\",\n    \"zip\": \"voluptate irure in\",\n    \"projectUsers\": [\n     {\n      \"id\": \"ullamco anim\",\n      \"projectId\": \"est anim enim\",\n      \"userId\": \"officia ea id do\",\n      \"roleId\": \"est aliqua in ex\",\n      \"isOwner\": true,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"consectetur aliqua magna exercitati\",\n      \"projectId\": \"enim ipsum\",\n      \"userId\": \"dolor consectetur eiusmod dolor\",\n      \"roleId\": \"proident magna cu\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"id\": \"ut qui non dolore\",\n    \"accountId\": \"anim dolore\",\n    \"lat\": -89197492.16772956,\n    \"lng\": -9221258.607413277,\n    \"startDate\": \"2003-02-20T22:16:13.867Z\",\n    \"endDate\": \"2000-03-24T11:35:08.747Z\",\n    \"isActive\": false,\n    \"lateWarEnabled\": true,\n    \"earlyWarEnabled\": false,\n    \"lateWarPercentage\": 60,\n    \"lateWarMinHour\": -62613950.48962526,\n    \"earlyWarHour\": 14863208.225196317,\n    \"name\": \"elit est\",\n    \"code\": \"incididunt sint\",\n    \"imgUri\": \"nisi est esse fugiat\",\n    \"description\": \"magna sit et adipisicing cillum\",\n    \"street\": \"reprehenderit mollit\",\n    \"country\": \"Excepteur et dolore\",\n    \"city\": \"minim ex Ut adipisicing\",\n    \"state\": \"in deserunt\",\n    \"zip\": \"eu in cillum officia\",\n    \"projectUsers\": [\n     {\n      \"id\": \"Ut mollit eiusmod labore reprehenderit\",\n      \"projectId\": \"irure eiusmod ut\",\n      \"userId\": \"dolore ut ea est\",\n      \"roleId\": \"reprehenderit cillum sit velit\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"incididunt anim labore consequat\",\n      \"projectId\": \"sunt consequat\",\n      \"userId\": \"anim\",\n      \"roleId\": \"reprehenderit nisi\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ],\n  \"accountUser\": [\n   {\n    \"accountId\": \"id ut in Duis elit\",\n    \"userId\": \"incididunt\",\n    \"gender\": 1,\n    \"roleId\": \"ut deserunt commodo eu\",\n    \"activeProjectId\": \"culpa laborum Lorem Excepteur sint\",\n    \"isOwner\": false,\n    \"accountUserStatus\": 0,\n    \"firstName\": \"sed cillum enim pariatur\",\n    \"lastName\": \"magna aliqua in\",\n    \"phoneNumber\": \"sit Dui\",\n    \"jobTitle\": \"proident\",\n    \"verificationCode\": \"fugiat amet labore minim\",\n    \"user\": {\n     \"firstName\": \"ipsum commodo in eu\",\n     \"lastName\": \"dolor id\",\n     \"phone\": \"occaecat eiusmod id\",\n     \"profileImage\": \"nisi quis\",\n     \"imageUri\": \"Ut veniam\"\n    }\n   },\n   {\n    \"accountId\": \"consequat anim\",\n    \"userId\": \"esse Lorem tempor id est\",\n    \"gender\": 4,\n    \"roleId\": \"anim\",\n    \"activeProjectId\": \"elit dolore\",\n    \"isOwner\": true,\n    \"accountUserStatus\": 1,\n    \"firstName\": \"ipsum ex\",\n    \"lastName\": \"es\",\n    \"phoneNumber\": \"nulla velit\",\n    \"jobTitle\": \"aliqua ullamco et\",\n    \"verificationCode\": \"est consequat labore\",\n    \"user\": {\n     \"firstName\": \"Excepteur aliquip consectetur\",\n     \"lastName\": \"in sed Duis et\",\n     \"phone\": \"et voluptate\",\n     \"profileImage\": \"cillum esse\",\n     \"imageUri\": \"esse et\"\n    }\n   }\n  ]\n },\n {\n  \"id\": \"irure eu\",\n  \"vatId\": \"culpa dolore amet\",\n  \"isActive\": false,\n  \"parentAccountId\": \"consequat irure laborum mollit\",\n  \"code\": \"et ut irure\",\n  \"name\": \"ullamco id\",\n  \"phone\": \"dolor\",\n  \"logo\": \"qui dolor\",\n  \"street\": \"ad ipsum in anim\",\n  \"city\": \"nulla nisi\",\n  \"state\": \"cupidatat ipsum reprehenderit et\",\n  \"zip\": \"elit\",\n  \"countryCode\": \"quis\",\n  \"companySize\": \"ea sit ut in\",\n  \"regNumber\": \"irure\",\n  \"companyNumber\": \"mollit sunt id commodo\",\n  \"description\": \"officia eiusmod ex laborum\",\n  \"url\": \"elit id nostrud eiusmod\",\n  \"projects\": [\n   {\n    \"id\": \"sit pariatur cupidatat sint dolor\",\n    \"accountId\": \"eiusmod cillum\",\n    \"lat\": 23513626.242961243,\n    \"lng\": -8456058.028166696,\n    \"startDate\": \"1997-03-08T16:02:52.554Z\",\n    \"endDate\": \"1998-04-28T23:08:10.496Z\",\n    \"isActive\": true,\n    \"lateWarEnabled\": false,\n    \"earlyWarEnabled\": true,\n    \"lateWarPercentage\": 50,\n    \"lateWarMinHour\": 7883491.049721196,\n    \"earlyWarHour\": 50645858.22336659,\n    \"name\": \"nisi\",\n    \"code\": \"ut aliquip Ut\",\n    \"imgUri\": \"ullamco\",\n    \"description\": \"deser\",\n    \"street\": \"in in sit ex\",\n    \"country\": \"enim occaecat dolor ullamco\",\n    \"city\": \"laboris sed dolore\",\n    \"state\": \"nulla labore\",\n    \"zip\": \"esse cillum\",\n    \"projectUsers\": [\n     {\n      \"id\": \"commodo fugiat\",\n      \"projectId\": \"dolore ad dolor aliqua\",\n      \"userId\": \"dolore do laboris tempor deserunt\",\n      \"roleId\": \"sunt\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"consectetur velit\",\n      \"projectId\": \"do sed cillum\",\n      \"userId\": \"proident\",\n      \"roleId\": \"cupidatat laboris\",\n      \"isOwner\": true,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"id\": \"velit cillum\",\n    \"accountId\": \"proident eiu\",\n    \"lat\": -8093710.003935859,\n    \"lng\": 11950488.157390013,\n    \"startDate\": \"1945-05-01T12:25:31.067Z\",\n    \"endDate\": \"2013-12-25T09:41:28.488Z\",\n    \"isActive\": true,\n    \"lateWarEnabled\": false,\n    \"earlyWarEnabled\": true,\n    \"lateWarPercentage\": 0,\n    \"lateWarMinHour\": -66533701.72966775,\n    \"earlyWarHour\": 8357984.126242399,\n    \"name\": \"ut commodo et in\",\n    \"code\": \"Ut et quis do mollit\",\n    \"imgUri\": \"labore anim velit dolor\",\n    \"description\": \"magna exercitation elit ut au\",\n    \"street\": \"dolor esse voluptate\",\n    \"country\": \"magna Lorem sint ut\",\n    \"city\": \"fugiat\",\n    \"state\": \"ut esse est eu\",\n    \"zip\": \"culpa deserunt exercitation Lorem\",\n    \"projectUsers\": [\n     {\n      \"id\": \"anim elit dolore\",\n      \"projectId\": \"commodo consequat cillum\",\n      \"userId\": \"magna laborum\",\n      \"roleId\": \"ipsum deserunt est nostrud\",\n      \"isOwner\": true,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"proident ut laborum magna Excepteur\",\n      \"projectId\": \"ut ex reprehenderit veniam\",\n      \"userId\": \"laboris proident\",\n      \"roleId\": \"eiusmod Duis voluptate laboris\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ],\n  \"accountUser\": [\n   {\n    \"accountId\": \"sit\",\n    \"userId\": \"anim sint\",\n    \"gender\": 4,\n    \"roleId\": \"amet aute voluptate\",\n    \"activeProjectId\": \"mollit commodo ut pariatur\",\n    \"isOwner\": false,\n    \"accountUserStatus\": 2,\n    \"firstName\": \"des\",\n    \"lastName\": \"p\",\n    \"phoneNumber\": \"nostrud fugiat Duis\",\n    \"jobTitle\": \"et dolore nisi proident consectetur\",\n    \"verificationCode\": \"commodo consectetur\",\n    \"user\": {\n     \"firstName\": \"esse\",\n     \"lastName\": \"sunt proident ea\",\n     \"phone\": \"Lorem ipsum commodo do\",\n     \"profileImage\": \"pariatur id ea aliquip\",\n     \"imageUri\": \"magna\"\n    }\n   },\n   {\n    \"accountId\": \"non velit sunt voluptate\",\n    \"userId\": \"sed\",\n    \"gender\": 1,\n    \"roleId\": \"tempor dolor sed\",\n    \"activeProjectId\": \"quis\",\n    \"isOwner\": true,\n    \"accountUserStatus\": 2,\n    \"firstName\": \"do adipisicing\",\n    \"lastName\": \"aute minim nostrud\",\n    \"phoneNumber\": \"velit qu\",\n    \"jobTitle\": \"aliquip n\",\n    \"verificationCode\": \"laboris magna amet reprehenderit dolore\",\n    \"user\": {\n     \"firstName\": \"in reprehenderit ad\",\n     \"lastName\": \"commodo quis deserunt do sed\",\n     \"phone\": \"dol\",\n     \"profileImage\": \"dolore ea Excepteur culpa\",\n     \"imageUri\": \"deserunt\"\n    }\n   }\n  ]\n }\n]"
								}
							]
						},
						{
							"name": "Accounts Get User Accounts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"var users=response;\r",
											"var user=users[0];\r",
											"console.log(user);\r",
											"\r",
											"pm.test(\"type is javascript object\",()=>{\r",
											"pm.expect(user).to.be.an(\"object\");\r",
											"\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Accounts/GetUserAccounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Accounts",
										"GetUserAccounts"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Accounts/GetUserAccounts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Accounts",
												"GetUserAccounts"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"commodo non\",\n  \"vatId\": \"amet consequat\",\n  \"isActive\": true,\n  \"parentAccountId\": \"non voluptate do\",\n  \"code\": \"fugiat magna\",\n  \"name\": \"aliquip cillum qui pariatur\",\n  \"phone\": \"deserunt in\",\n  \"logo\": \"ex magna qui\",\n  \"street\": \"sit qui exercitation\",\n  \"city\": \"ullamco exercitation\",\n  \"state\": \"Duis officia laboris\",\n  \"zip\": \"laborum aliqua in dolor\",\n  \"countryCode\": \"Ut cupidatat\",\n  \"companySize\": \"pariatur ad ipsum\",\n  \"regNumber\": \"magna irure dolor commodo\",\n  \"companyNumber\": \"ut quis\",\n  \"description\": \"su\",\n  \"url\": \"ex id sint\",\n  \"projects\": [\n   {\n    \"id\": \"et enim\",\n    \"accountId\": \"deserunt mollit voluptate aliquip proident\",\n    \"lat\": 55012232.58499047,\n    \"lng\": 58944875.9472965,\n    \"startDate\": \"1964-01-18T13:04:12.363Z\",\n    \"endDate\": \"2017-12-13T07:56:28.618Z\",\n    \"isActive\": false,\n    \"lateWarEnabled\": true,\n    \"earlyWarEnabled\": true,\n    \"lateWarPercentage\": 0,\n    \"lateWarMinHour\": -18870082.306913227,\n    \"earlyWarHour\": 8823351.370246664,\n    \"name\": \"pariatur exercitation ut quis\",\n    \"code\": \"veniam irure enim pariatur\",\n    \"imgUri\": \"nulla do \",\n    \"description\": \"est consectetur Duis eiusmod\",\n    \"street\": \"anim veniam Duis\",\n    \"country\": \"nisi incididunt Ut dolor\",\n    \"city\": \"enim incididunt minim\",\n    \"state\": \"amet mollit velit in\",\n    \"zip\": \"voluptate irure in\",\n    \"projectUsers\": [\n     {\n      \"id\": \"ullamco anim\",\n      \"projectId\": \"est anim enim\",\n      \"userId\": \"officia ea id do\",\n      \"roleId\": \"est aliqua in ex\",\n      \"isOwner\": true,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"consectetur aliqua magna exercitati\",\n      \"projectId\": \"enim ipsum\",\n      \"userId\": \"dolor consectetur eiusmod dolor\",\n      \"roleId\": \"proident magna cu\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"id\": \"ut qui non dolore\",\n    \"accountId\": \"anim dolore\",\n    \"lat\": -89197492.16772956,\n    \"lng\": -9221258.607413277,\n    \"startDate\": \"2003-02-20T22:16:13.867Z\",\n    \"endDate\": \"2000-03-24T11:35:08.747Z\",\n    \"isActive\": false,\n    \"lateWarEnabled\": true,\n    \"earlyWarEnabled\": false,\n    \"lateWarPercentage\": 60,\n    \"lateWarMinHour\": -62613950.48962526,\n    \"earlyWarHour\": 14863208.225196317,\n    \"name\": \"elit est\",\n    \"code\": \"incididunt sint\",\n    \"imgUri\": \"nisi est esse fugiat\",\n    \"description\": \"magna sit et adipisicing cillum\",\n    \"street\": \"reprehenderit mollit\",\n    \"country\": \"Excepteur et dolore\",\n    \"city\": \"minim ex Ut adipisicing\",\n    \"state\": \"in deserunt\",\n    \"zip\": \"eu in cillum officia\",\n    \"projectUsers\": [\n     {\n      \"id\": \"Ut mollit eiusmod labore reprehenderit\",\n      \"projectId\": \"irure eiusmod ut\",\n      \"userId\": \"dolore ut ea est\",\n      \"roleId\": \"reprehenderit cillum sit velit\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"incididunt anim labore consequat\",\n      \"projectId\": \"sunt consequat\",\n      \"userId\": \"anim\",\n      \"roleId\": \"reprehenderit nisi\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ],\n  \"accountUser\": [\n   {\n    \"accountId\": \"id ut in Duis elit\",\n    \"userId\": \"incididunt\",\n    \"gender\": 1,\n    \"roleId\": \"ut deserunt commodo eu\",\n    \"activeProjectId\": \"culpa laborum Lorem Excepteur sint\",\n    \"isOwner\": false,\n    \"accountUserStatus\": 0,\n    \"firstName\": \"sed cillum enim pariatur\",\n    \"lastName\": \"magna aliqua in\",\n    \"phoneNumber\": \"sit Dui\",\n    \"jobTitle\": \"proident\",\n    \"verificationCode\": \"fugiat amet labore minim\",\n    \"user\": {\n     \"firstName\": \"ipsum commodo in eu\",\n     \"lastName\": \"dolor id\",\n     \"phone\": \"occaecat eiusmod id\",\n     \"profileImage\": \"nisi quis\",\n     \"imageUri\": \"Ut veniam\"\n    }\n   },\n   {\n    \"accountId\": \"consequat anim\",\n    \"userId\": \"esse Lorem tempor id est\",\n    \"gender\": 4,\n    \"roleId\": \"anim\",\n    \"activeProjectId\": \"elit dolore\",\n    \"isOwner\": true,\n    \"accountUserStatus\": 1,\n    \"firstName\": \"ipsum ex\",\n    \"lastName\": \"es\",\n    \"phoneNumber\": \"nulla velit\",\n    \"jobTitle\": \"aliqua ullamco et\",\n    \"verificationCode\": \"est consequat labore\",\n    \"user\": {\n     \"firstName\": \"Excepteur aliquip consectetur\",\n     \"lastName\": \"in sed Duis et\",\n     \"phone\": \"et voluptate\",\n     \"profileImage\": \"cillum esse\",\n     \"imageUri\": \"esse et\"\n    }\n   }\n  ]\n },\n {\n  \"id\": \"irure eu\",\n  \"vatId\": \"culpa dolore amet\",\n  \"isActive\": false,\n  \"parentAccountId\": \"consequat irure laborum mollit\",\n  \"code\": \"et ut irure\",\n  \"name\": \"ullamco id\",\n  \"phone\": \"dolor\",\n  \"logo\": \"qui dolor\",\n  \"street\": \"ad ipsum in anim\",\n  \"city\": \"nulla nisi\",\n  \"state\": \"cupidatat ipsum reprehenderit et\",\n  \"zip\": \"elit\",\n  \"countryCode\": \"quis\",\n  \"companySize\": \"ea sit ut in\",\n  \"regNumber\": \"irure\",\n  \"companyNumber\": \"mollit sunt id commodo\",\n  \"description\": \"officia eiusmod ex laborum\",\n  \"url\": \"elit id nostrud eiusmod\",\n  \"projects\": [\n   {\n    \"id\": \"sit pariatur cupidatat sint dolor\",\n    \"accountId\": \"eiusmod cillum\",\n    \"lat\": 23513626.242961243,\n    \"lng\": -8456058.028166696,\n    \"startDate\": \"1997-03-08T16:02:52.554Z\",\n    \"endDate\": \"1998-04-28T23:08:10.496Z\",\n    \"isActive\": true,\n    \"lateWarEnabled\": false,\n    \"earlyWarEnabled\": true,\n    \"lateWarPercentage\": 50,\n    \"lateWarMinHour\": 7883491.049721196,\n    \"earlyWarHour\": 50645858.22336659,\n    \"name\": \"nisi\",\n    \"code\": \"ut aliquip Ut\",\n    \"imgUri\": \"ullamco\",\n    \"description\": \"deser\",\n    \"street\": \"in in sit ex\",\n    \"country\": \"enim occaecat dolor ullamco\",\n    \"city\": \"laboris sed dolore\",\n    \"state\": \"nulla labore\",\n    \"zip\": \"esse cillum\",\n    \"projectUsers\": [\n     {\n      \"id\": \"commodo fugiat\",\n      \"projectId\": \"dolore ad dolor aliqua\",\n      \"userId\": \"dolore do laboris tempor deserunt\",\n      \"roleId\": \"sunt\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"consectetur velit\",\n      \"projectId\": \"do sed cillum\",\n      \"userId\": \"proident\",\n      \"roleId\": \"cupidatat laboris\",\n      \"isOwner\": true,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"id\": \"velit cillum\",\n    \"accountId\": \"proident eiu\",\n    \"lat\": -8093710.003935859,\n    \"lng\": 11950488.157390013,\n    \"startDate\": \"1945-05-01T12:25:31.067Z\",\n    \"endDate\": \"2013-12-25T09:41:28.488Z\",\n    \"isActive\": true,\n    \"lateWarEnabled\": false,\n    \"earlyWarEnabled\": true,\n    \"lateWarPercentage\": 0,\n    \"lateWarMinHour\": -66533701.72966775,\n    \"earlyWarHour\": 8357984.126242399,\n    \"name\": \"ut commodo et in\",\n    \"code\": \"Ut et quis do mollit\",\n    \"imgUri\": \"labore anim velit dolor\",\n    \"description\": \"magna exercitation elit ut au\",\n    \"street\": \"dolor esse voluptate\",\n    \"country\": \"magna Lorem sint ut\",\n    \"city\": \"fugiat\",\n    \"state\": \"ut esse est eu\",\n    \"zip\": \"culpa deserunt exercitation Lorem\",\n    \"projectUsers\": [\n     {\n      \"id\": \"anim elit dolore\",\n      \"projectId\": \"commodo consequat cillum\",\n      \"userId\": \"magna laborum\",\n      \"roleId\": \"ipsum deserunt est nostrud\",\n      \"isOwner\": true,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"proident ut laborum magna Excepteur\",\n      \"projectId\": \"ut ex reprehenderit veniam\",\n      \"userId\": \"laboris proident\",\n      \"roleId\": \"eiusmod Duis voluptate laboris\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ],\n  \"accountUser\": [\n   {\n    \"accountId\": \"sit\",\n    \"userId\": \"anim sint\",\n    \"gender\": 4,\n    \"roleId\": \"amet aute voluptate\",\n    \"activeProjectId\": \"mollit commodo ut pariatur\",\n    \"isOwner\": false,\n    \"accountUserStatus\": 2,\n    \"firstName\": \"des\",\n    \"lastName\": \"p\",\n    \"phoneNumber\": \"nostrud fugiat Duis\",\n    \"jobTitle\": \"et dolore nisi proident consectetur\",\n    \"verificationCode\": \"commodo consectetur\",\n    \"user\": {\n     \"firstName\": \"esse\",\n     \"lastName\": \"sunt proident ea\",\n     \"phone\": \"Lorem ipsum commodo do\",\n     \"profileImage\": \"pariatur id ea aliquip\",\n     \"imageUri\": \"magna\"\n    }\n   },\n   {\n    \"accountId\": \"non velit sunt voluptate\",\n    \"userId\": \"sed\",\n    \"gender\": 1,\n    \"roleId\": \"tempor dolor sed\",\n    \"activeProjectId\": \"quis\",\n    \"isOwner\": true,\n    \"accountUserStatus\": 2,\n    \"firstName\": \"do adipisicing\",\n    \"lastName\": \"aute minim nostrud\",\n    \"phoneNumber\": \"velit qu\",\n    \"jobTitle\": \"aliquip n\",\n    \"verificationCode\": \"laboris magna amet reprehenderit dolore\",\n    \"user\": {\n     \"firstName\": \"in reprehenderit ad\",\n     \"lastName\": \"commodo quis deserunt do sed\",\n     \"phone\": \"dol\",\n     \"profileImage\": \"dolore ea Excepteur culpa\",\n     \"imageUri\": \"deserunt\"\n    }\n   }\n  ]\n }\n]"
								}
							]
						},
						{
							"name": "Accounts Get Account Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"pm.test(\"Returning Data\",()=>{\r",
											"    pm.expect(response.length).to.be.not.eql(null);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Accounts/GetAccountUsers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Accounts",
										"GetAccountUsers"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Accounts/GetAccountUsers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Accounts",
												"GetAccountUsers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"accountId\": \"do enim\",\n  \"userId\": \"adipisicing sed in est velit\",\n  \"gender\": 4,\n  \"roleId\": \"sunt sed occaecat\",\n  \"activeProjectId\": \"dolore officia fugiat ullamco\",\n  \"isOwner\": true,\n  \"accountUserStatus\": 2,\n  \"firstName\": \"reprehenderit nulla\",\n  \"lastName\": \"cupidatat Lorem si\",\n  \"phoneNumber\": \"velit cupidatat irure ut\",\n  \"jobTitle\": \"dolore\",\n  \"verificationCode\": \"nostrud velit\",\n  \"user\": {\n   \"firstName\": \"dolore ad in\",\n   \"lastName\": \"sed\",\n   \"phone\": \"culp\",\n   \"profileImage\": \"culpa non ulla\",\n   \"imageUri\": \"aliquip eiusmod do\"\n  }\n },\n {\n  \"accountId\": \"enim occaecat laboris\",\n  \"userId\": \"voluptate eiusmod Excepteur consectetur dolor\",\n  \"gender\": 1,\n  \"roleId\": \"nisi Ut minim laborum deserunt\",\n  \"activeProjectId\": \"ullamco officia\",\n  \"isOwner\": false,\n  \"accountUserStatus\": 0,\n  \"firstName\": \"laborum Lorem cupidatat minim\",\n  \"lastName\": \"aliquip tempor et amet cillum\",\n  \"phoneNumber\": \"eu ex\",\n  \"jobTitle\": \"ipsum in velit eiusmod\",\n  \"verificationCode\": \"amet\",\n  \"user\": {\n   \"firstName\": \"pariatur co\",\n   \"lastName\": \"et\",\n   \"phone\": \"nulla enim adipisicing Ut veniam\",\n   \"profileImage\": \"qui aliqua do\",\n   \"imageUri\": \"do tempor\"\n  }\n }\n]"
								}
							]
						},
						{
							"name": "Accounts Get Account Owners",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"pm.test(\"Returning Data\",()=>{\r",
											"    pm.expect(response.length).to.be.not.eql(null);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Accounts/GetAccountOwners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Accounts",
										"GetAccountOwners"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Accounts/GetAccountOwners",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Accounts",
												"GetAccountOwners"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"accountId\": \"do enim\",\n  \"userId\": \"adipisicing sed in est velit\",\n  \"gender\": 4,\n  \"roleId\": \"sunt sed occaecat\",\n  \"activeProjectId\": \"dolore officia fugiat ullamco\",\n  \"isOwner\": true,\n  \"accountUserStatus\": 2,\n  \"firstName\": \"reprehenderit nulla\",\n  \"lastName\": \"cupidatat Lorem si\",\n  \"phoneNumber\": \"velit cupidatat irure ut\",\n  \"jobTitle\": \"dolore\",\n  \"verificationCode\": \"nostrud velit\",\n  \"user\": {\n   \"firstName\": \"dolore ad in\",\n   \"lastName\": \"sed\",\n   \"phone\": \"culp\",\n   \"profileImage\": \"culpa non ulla\",\n   \"imageUri\": \"aliquip eiusmod do\"\n  }\n },\n {\n  \"accountId\": \"enim occaecat laboris\",\n  \"userId\": \"voluptate eiusmod Excepteur consectetur dolor\",\n  \"gender\": 1,\n  \"roleId\": \"nisi Ut minim laborum deserunt\",\n  \"activeProjectId\": \"ullamco officia\",\n  \"isOwner\": false,\n  \"accountUserStatus\": 0,\n  \"firstName\": \"laborum Lorem cupidatat minim\",\n  \"lastName\": \"aliquip tempor et amet cillum\",\n  \"phoneNumber\": \"eu ex\",\n  \"jobTitle\": \"ipsum in velit eiusmod\",\n  \"verificationCode\": \"amet\",\n  \"user\": {\n   \"firstName\": \"pariatur co\",\n   \"lastName\": \"et\",\n   \"phone\": \"nulla enim adipisicing Ut veniam\",\n   \"profileImage\": \"qui aliqua do\",\n   \"imageUri\": \"do tempor\"\n  }\n }\n]"
								}
							]
						},
						{
							"name": "Accounts Get Account By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response=pm.response.json(); \r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Returning Data\",()=>{\r",
											"    pm.expect(response.length).to.be.not.eql(null);\r",
											"    pm.globals.set(\"AccountId\",response.id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Accounts/GetAccountById",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Accounts",
										"GetAccountById"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Accounts/GetAccountById",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Accounts",
												"GetAccountById"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"sed proident\",\n \"vatId\": \"nostrud adipisicing\",\n \"isActive\": false,\n \"parentAccountId\": \"in id\",\n \"code\": \"mollit in nulla dolore eu\",\n \"name\": \"fugiat ex est ea\",\n \"phone\": \"in fugiat labore officia elit\",\n \"logo\": \"velit est\",\n \"street\": \"consectetur reprehenderit culpa of\",\n \"city\": \"et eius\",\n \"state\": \"minim\",\n \"zip\": \"labore officia nisi Excepteur vol\",\n \"countryCode\": \"Lorem non\",\n \"companySize\": \"velit occaecat ipsum\",\n \"regNumber\": \"esse dolor laboris\",\n \"companyNumber\": \"minim sed fugiat\",\n \"description\": \"nostrud pariatur dolor laborum ex\",\n \"url\": \"do ad sunt aute dolore\",\n \"projects\": [\n  {\n   \"id\": \"ipsum in labore\",\n   \"accountId\": \"l\",\n   \"lat\": 72880387.41131356,\n   \"lng\": 64147472.22064251,\n   \"startDate\": \"2001-03-15T06:44:30.298Z\",\n   \"endDate\": \"2002-12-10T05:36:33.948Z\",\n   \"isActive\": false,\n   \"lateWarEnabled\": false,\n   \"earlyWarEnabled\": true,\n   \"lateWarPercentage\": 50,\n   \"lateWarMinHour\": 95541563.69585499,\n   \"earlyWarHour\": 12692123.272425875,\n   \"name\": \"dolore labore est sit eiusmod\",\n   \"code\": \"in veniam id velit\",\n   \"imgUri\": \"eu dolor ad reprehenderit\",\n   \"description\": \"eiusmo\",\n   \"street\": \"a\",\n   \"country\": \"exercitation sed\",\n   \"city\": \"commodo\",\n   \"state\": \"enim culpa in\",\n   \"zip\": \"enim tempor\",\n   \"projectUsers\": [\n    {\n     \"id\": \"non qui magna\",\n     \"projectId\": \"velit in pariatur\",\n     \"userId\": \"commodo quis pariatur\",\n     \"roleId\": \"Ut esse\",\n     \"isOwner\": false,\n     \"userRight\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"user\": {\n      \"firstName\": \"fugiat esse labore\",\n      \"lastName\": \"esse ea\",\n      \"phone\": \"exercitation dolor sunt eiusmod magna\",\n      \"profileImage\": \"esse proident\",\n      \"imageUri\": \"incididunt eu veniam quis ad\"\n     }\n    },\n    {\n     \"id\": \"consectetur\",\n     \"projectId\": \"minim\",\n     \"userId\": \"nul\",\n     \"roleId\": \"est qui sint\",\n     \"isOwner\": false,\n     \"userRight\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"user\": {\n      \"firstName\": \"reprehenderit do\",\n      \"lastName\": \"elit occaecat exercitation mollit\",\n      \"phone\": \"esse adipisicing Ut\",\n      \"profileImage\": \"et Ut sint nisi\",\n      \"imageUri\": \"veniam in\"\n     }\n    }\n   ]\n  },\n  {\n   \"id\": \"laboris mollit Ut\",\n   \"accountId\": \"ut\",\n   \"lat\": -80038785.85231829,\n   \"lng\": -39597967.884591065,\n   \"startDate\": \"2020-03-02T15:53:20.249Z\",\n   \"endDate\": \"1987-09-24T18:51:04.314Z\",\n   \"isActive\": false,\n   \"lateWarEnabled\": false,\n   \"earlyWarEnabled\": false,\n   \"lateWarPercentage\": 60,\n   \"lateWarMinHour\": -45994824.66086102,\n   \"earlyWarHour\": 50696700.88425872,\n   \"name\": \"nostrud in nisi eiusmod\",\n   \"code\": \"velit laboris\",\n   \"imgUri\": \"in elit consectetur\",\n   \"description\": \"ea tempor\",\n   \"street\": \"adipisicing\",\n   \"country\": \"occaecat nisi\",\n   \"city\": \"veniam est sit eiusmod\",\n   \"state\": \"proident occaecat officia tempor\",\n   \"zip\": \"culpa pariatur officia\",\n   \"projectUsers\": [\n    {\n     \"id\": \"qui\",\n     \"projectId\": \"culpa velit cupidatat\",\n     \"userId\": \"elit minim Excepteur amet in\",\n     \"roleId\": \"sint id sit\",\n     \"isOwner\": false,\n     \"userRight\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"user\": {\n      \"firstName\": \"voluptate culpa\",\n      \"lastName\": \"aliquip anim velit\",\n      \"phone\": \"in irure\",\n      \"profileImage\": \"Excepteur qui\",\n      \"imageUri\": \"non cillum incididunt \"\n     }\n    },\n    {\n     \"id\": \"amet est Excepteur velit\",\n     \"projectId\": \"Duis irure culpa aliqua voluptate\",\n     \"userId\": \"nostrud nisi pariatur\",\n     \"roleId\": \"nisi in qui eiusmod ullamco\",\n     \"isOwner\": true,\n     \"userRight\": [\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     ],\n     \"user\": {\n      \"firstName\": \"proident sit culpa ea ullamco\",\n      \"lastName\": \"velit ea minim\",\n      \"phone\": \"elit minim sit\",\n      \"profileImage\": \"dolor reprehenderit\",\n      \"imageUri\": \"proident velit\"\n     }\n    }\n   ]\n  }\n ],\n \"accountUser\": [\n  {\n   \"accountId\": \"ex aliquip\",\n   \"userId\": \"elit laborum\",\n   \"gender\": 4,\n   \"roleId\": \"nostrud commodo\",\n   \"activeProjectId\": \"in officia esse anim\",\n   \"isOwner\": true,\n   \"accountUserStatus\": 2,\n   \"firstName\": \"sunt cillum elit pariatur\",\n   \"lastName\": \"non occaecat adipisicing\",\n   \"phoneNumber\": \"irure exercitation enim commodo\",\n   \"jobTitle\": \"in\",\n   \"verificationCode\": \"non nisi ipsum\",\n   \"user\": {\n    \"firstName\": \"tempor\",\n    \"lastName\": \"cillum nisi incididunt\",\n    \"phone\": \"ex dolore occaecat\",\n    \"profileImage\": \"adipisicing mollit\",\n    \"imageUri\": \"occaecat\"\n   }\n  },\n  {\n   \"accountId\": \"quis in officia Ut\",\n   \"userId\": \"voluptate adipisicing\",\n   \"gender\": 4,\n   \"roleId\": \"Ut voluptate deserunt in sunt\",\n   \"activeProjectId\": \"incididunt ad\",\n   \"isOwner\": true,\n   \"accountUserStatus\": 1,\n   \"firstName\": \"sit est laboris\",\n   \"lastName\": \"ullamco esse com\",\n   \"phoneNumber\": \"nostrud laborum exercitation\",\n   \"jobTitle\": \"voluptate ad officia anim et\",\n   \"verificationCode\": \"sed eu eiusmod\",\n   \"user\": {\n    \"firstName\": \"tempor reprehenderit\",\n    \"lastName\": \"officia occaecat et\",\n    \"phone\": \"minim id\",\n    \"profileImage\": \"mollit esse \",\n    \"imageUri\": \"laboris\"\n   }\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Account User Add Account User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.globals.set(\"accountUserRoleId\", pm.response.json().data.roleId)\r",
											"\r",
											"pm.test(\"Account User Created Successfully\",()=>{\r",
											"    const response=pm.response.json();\r",
											"    pm.expect(response.statusMessage).to.be.eql(\"Account User Added Successfully!\");\r",
											"    pm.globals.set(\"AccountUserId\",response.data.id);\r",
											"   \r",
											"})\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"accountId\": \"{{AccountId}}\",\n    \"userId\": \"{{UserIdFromDB}}\",\n    \"roleId\": \"{{AccountOwnerRoleId}}\",\n    \"accountUserStatus\": 2,\n    \"activeProjectId\": \"deace328-800f-4a8d-9be1-721f99cb6fed\",\n    \"phoneNumber\": \"qui elit ex Excepteur\",\n    \"jobTitle\": \"ipsum Duis ullamco sed Excepteur\",\n    \"verificationCode\": \"eiusmod dolor do cill\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountUser/AddAccountUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountUser",
										"AddAccountUser"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accountId\": \"cillum veniam\",\n    \"userId\": \"consectetur culpa\",\n    \"manager\": \"ullamco\",\n    \"roleId\": \"dolore v\",\n    \"accountUserStatus\": 2,\n    \"activeProjectId\": \"Ut dolore deserunt\",\n    \"phoneNumber\": \"qui elit ex Excepteur\",\n    \"jobTitle\": \"ipsum Duis ullamco sed Excepteur\",\n    \"verificationCode\": \"eiusmod dolor do cill\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/AccountUser/AddAccountUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountUser",
												"AddAccountUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"statusCode\": 99001948,\n \"statusMessage\": \"in Ut adipisicing\",\n \"data\": {}\n}"
								}
							]
						},
						{
							"name": "Account User Update Status To Active",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"console.log(response);\r",
											"pm.test(\"Status Changed to Active\",()=>{\r",
											"    pm.expect(response).to.be.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/AccountUser/UpdateStatusToActive?Id={{AccountUserId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountUser",
										"UpdateStatusToActive"
									],
									"query": [
										{
											"key": "Id",
											"value": "{{AccountUserId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AccountUser/UpdateStatusToActive?Id=reprehenderit sunt incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountUser",
												"UpdateStatusToActive"
											],
											"query": [
												{
													"key": "Id",
													"value": "reprehenderit sunt incididunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "true"
								}
							]
						},
						{
							"name": "Account User Update Status To In Active",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"console.log(response);\r",
											"pm.test(\"Status Changed to In-Active\",()=>{\r",
											"    pm.expect(response).to.be.eql(true);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{LoggedInToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountUser/UpdateStatusToInActive?Id={{AccountUserId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountUser",
										"UpdateStatusToInActive"
									],
									"query": [
										{
											"key": "Id",
											"value": "{{AccountUserId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AccountUser/UpdateStatusToInActive?Id=reprehenderit sunt incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountUser",
												"UpdateStatusToInActive"
											],
											"query": [
												{
													"key": "Id",
													"value": "reprehenderit sunt incididunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "true"
								}
							]
						},
						{
							"name": "Account User Update Status To Pending",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"console.log(response);\r",
											"pm.test(\"Status Changed to pending\",()=>{\r",
											"    pm.expect(response).to.be.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/AccountUser/UpdateStatusToPending?Id={{AccountUserId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountUser",
										"UpdateStatusToPending"
									],
									"query": [
										{
											"key": "Id",
											"value": "{{AccountUserId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AccountUser/UpdateStatusToPending?Id=reprehenderit sunt incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountUser",
												"UpdateStatusToPending"
											],
											"query": [
												{
													"key": "Id",
													"value": "reprehenderit sunt incididunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "true"
								}
							]
						},
						{
							"name": "Account User Get Active",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response=pm.response.json();\r",
											"var num;\r",
											"pm.test(\"returning active status\",()=>{\r",
											"for(num=0;num<response.data.length;num++){\r",
											"pm.expect(response.data[num].userStatus).to.be.eql(\"Active\");}\r",
											"})\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"pageNumber\": 1,\r\n  \"pageSize\": 10,\r\n  \"sortDirection\": 0,\r\n  \"keySearch\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountUser/GetActiveAccountUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountUser",
										"GetActiveAccountUser"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AccountUser/GetActiveAccountUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountUser",
												"GetActiveAccountUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"firstName\": \"ad ipsum tempor ut\",\n  \"lastName\": \"veniam ea anim nostrud\",\n  \"email\": \"fugiat sint labore exercitation\",\n  \"gender\": \"elit culpa officia\",\n  \"phoneNumber\": \"ut cupidatat\",\n  \"jobTitle\": \"sed pariatur\",\n  \"company\": \"dolore dolor U\",\n  \"userStatus\": \"cul\"\n },\n {\n  \"firstName\": \"aute voluptate in laboris\",\n  \"lastName\": \"consequat sint officia eiusmod id\",\n  \"email\": \"dolore ipsum\",\n  \"gender\": \"dolore consectetur esse\",\n  \"phoneNumber\": \"id ex\",\n  \"jobTitle\": \"sunt ullamco qui\",\n  \"company\": \"pariatur ut\",\n  \"userStatus\": \"ad ex ipsum Duis dolor\"\n }\n]"
								}
							]
						},
						{
							"name": "Account User Get Inactive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response=pm.response.json();\r",
											"var num;\r",
											"pm.test(\"returning In-Active status\",()=>{\r",
											"for(num=0;num<response.data.length;num++){\r",
											"pm.expect(response.data[num].userStatus).to.be.eql(\"In_Active\");}\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "id",
										"value": "{{userId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"pageNumber\": 1,\r\n  \"pageSize\": 10,\r\n  \"sortDirection\": 0,\r\n  \"keySearch\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountUser/GetInactiveAccountUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountUser",
										"GetInactiveAccountUser"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AccountUser/GetInactiveAccountUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountUser",
												"GetInactiveAccountUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"firstName\": \"ad ipsum tempor ut\",\n  \"lastName\": \"veniam ea anim nostrud\",\n  \"email\": \"fugiat sint labore exercitation\",\n  \"gender\": \"elit culpa officia\",\n  \"phoneNumber\": \"ut cupidatat\",\n  \"jobTitle\": \"sed pariatur\",\n  \"company\": \"dolore dolor U\",\n  \"userStatus\": \"cul\"\n },\n {\n  \"firstName\": \"aute voluptate in laboris\",\n  \"lastName\": \"consequat sint officia eiusmod id\",\n  \"email\": \"dolore ipsum\",\n  \"gender\": \"dolore consectetur esse\",\n  \"phoneNumber\": \"id ex\",\n  \"jobTitle\": \"sunt ullamco qui\",\n  \"company\": \"pariatur ut\",\n  \"userStatus\": \"ad ex ipsum Duis dolor\"\n }\n]"
								}
							]
						},
						{
							"name": "Account User Get Pending",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"returning users with Pending status\",()=>{\r",
											"const response=pm.response.json();\r",
											"var num;\r",
											"for(num=0;num<response.data.length;num++){\r",
											"    pm.expect(response.data[num].userStatus).to.be.eql(\"Pending\");\r",
											"}\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"pageNumber\": 1,\r\n  \"pageSize\": 10,\r\n  \"sortDirection\": 0,\r\n  \"keySearch\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountUser/GetPendingAccountUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountUser",
										"GetPendingAccountUser"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AccountUser/GetPendingAccountUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountUser",
												"GetPendingAccountUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"firstName\": \"ad ipsum tempor ut\",\n  \"lastName\": \"veniam ea anim nostrud\",\n  \"email\": \"fugiat sint labore exercitation\",\n  \"gender\": \"elit culpa officia\",\n  \"phoneNumber\": \"ut cupidatat\",\n  \"jobTitle\": \"sed pariatur\",\n  \"company\": \"dolore dolor U\",\n  \"userStatus\": \"cul\"\n },\n {\n  \"firstName\": \"aute voluptate in laboris\",\n  \"lastName\": \"consequat sint officia eiusmod id\",\n  \"email\": \"dolore ipsum\",\n  \"gender\": \"dolore consectetur esse\",\n  \"phoneNumber\": \"id ex\",\n  \"jobTitle\": \"sunt ullamco qui\",\n  \"company\": \"pariatur ut\",\n  \"userStatus\": \"ad ex ipsum Duis dolor\"\n }\n]"
								}
							]
						},
						{
							"name": "Account User Right Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response=pm.response.json();\r",
											"console.log(response.id);\r",
											"if(response.id){\r",
											"    pm.test(\"Id is not null\",()=>{\r",
											"    pm.expect(response.id).to.be.not.eql(null)\r",
											"    pm.globals.set(\"AccountUserRightId\",response.id);\r",
											"   \r",
											"})\r",
											"}\r",
											"else{\r",
											"    console.log(\"no id in body to test\")\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"rightId\": \"{{AddBoardMemberRightIdDB}}\",//Add Board Member Right\n    \"accountUserId\": \"{{AccountUserId}}\" //AccountUserId\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountUserRight/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountUserRight",
										"Create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"rightId\": \"occaecat irure ex\",\n    \"accountUserId\": \"dolore consequat in dolor amet\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/AccountUserRight/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountUserRight",
												"Create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"quis velit proident cillum\",\n \"rightId\": \"enim sunt sit ut\",\n \"accountUserId\": \"dolor dolore\"\n}"
								}
							]
						},
						{
							"name": "Account User Right Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"pm.test(\"Right Update Successful\",()=>{\r",
											"    pm.expect(response).to.be.eql(true);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{AccountUserRightId}}\",//AccountUserRightId\n    \"rightId\": \"{{CreateActivityRightIdDB}}\",//Create Activity Right\n    \"accountUserId\": \"{{AccountUserRightId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountUserRight/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountUserRight",
										"Update"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AccountUserRight/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountUserRight",
												"Update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "true"
								}
							]
						},
						{
							"name": "Account User Right Get By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/AccountUserRight/GetById?Id={{AccountUserRightId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountUserRight",
										"GetById"
									],
									"query": [
										{
											"key": "Id",
											"value": "{{AccountUserRightId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AccountUserRight/GetById?Id=reprehenderit sunt incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountUserRight",
												"GetById"
											],
											"query": [
												{
													"key": "Id",
													"value": "reprehenderit sunt incididunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"quis velit proident cillum\",\n \"rightId\": \"enim sunt sit ut\",\n \"accountUserId\": \"dolor dolore\"\n}"
								}
							]
						},
						{
							"name": "Account User Right Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"pm.test(\"Deleted and Returning True\",()=>{\r",
											"    pm.expect(response).to.be.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{AccountUserRightId}}\",\n    \"rightId\": \"{{AddBoardMemberRightIdDB}}\",\n    \"accountUserId\": \"{{AccountUserId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/AccountUserRight/Delete",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AccountUserRight",
										"Delete"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AccountUserRight/Delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AccountUserRight",
												"Delete"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "true"
								}
							]
						}
					]
				},
				{
					"name": "Sub-Account",
					"item": [
						{
							"name": "Sub Account Get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json();",
											"var accounts;",
											"var activeCount= 0;",
											"var inactiveCount =0;",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Checking for SubAccount status\", function () {",
											"    for(accounts=0; accounts<response.length; accounts++){",
											"        if(response[accounts].isActive){",
											"            activeCount++;",
											"        }",
											"        else{",
											"            inactiveCount++",
											"        }",
											"    }",
											"    console.log(\"Active Accounts: \"+ activeCount);",
											"    console.log(\"Inactive Accounts: \"+ inactiveCount);",
											"    ",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/SubAccount/Get",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SubAccount",
										"Get"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/SubAccount/Get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SubAccount",
												"Get"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"commodo non\",\n  \"vatId\": \"amet consequat\",\n  \"isActive\": true,\n  \"parentAccountId\": \"non voluptate do\",\n  \"code\": \"fugiat magna\",\n  \"name\": \"aliquip cillum qui pariatur\",\n  \"phone\": \"deserunt in\",\n  \"logo\": \"ex magna qui\",\n  \"street\": \"sit qui exercitation\",\n  \"city\": \"ullamco exercitation\",\n  \"state\": \"Duis officia laboris\",\n  \"zip\": \"laborum aliqua in dolor\",\n  \"countryCode\": \"Ut cupidatat\",\n  \"companySize\": \"pariatur ad ipsum\",\n  \"regNumber\": \"magna irure dolor commodo\",\n  \"companyNumber\": \"ut quis\",\n  \"description\": \"su\",\n  \"url\": \"ex id sint\",\n  \"projects\": [\n   {\n    \"id\": \"et enim\",\n    \"accountId\": \"deserunt mollit voluptate aliquip proident\",\n    \"lat\": 55012232.58499047,\n    \"lng\": 58944875.9472965,\n    \"startDate\": \"1964-01-18T13:04:12.363Z\",\n    \"endDate\": \"2017-12-13T07:56:28.618Z\",\n    \"isActive\": false,\n    \"lateWarEnabled\": true,\n    \"earlyWarEnabled\": true,\n    \"lateWarPercentage\": 0,\n    \"lateWarMinHour\": -18870082.306913227,\n    \"earlyWarHour\": 8823351.370246664,\n    \"name\": \"pariatur exercitation ut quis\",\n    \"code\": \"veniam irure enim pariatur\",\n    \"imgUri\": \"nulla do \",\n    \"description\": \"est consectetur Duis eiusmod\",\n    \"street\": \"anim veniam Duis\",\n    \"country\": \"nisi incididunt Ut dolor\",\n    \"city\": \"enim incididunt minim\",\n    \"state\": \"amet mollit velit in\",\n    \"zip\": \"voluptate irure in\",\n    \"projectUsers\": [\n     {\n      \"id\": \"ullamco anim\",\n      \"projectId\": \"est anim enim\",\n      \"userId\": \"officia ea id do\",\n      \"roleId\": \"est aliqua in ex\",\n      \"isOwner\": true,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"consectetur aliqua magna exercitati\",\n      \"projectId\": \"enim ipsum\",\n      \"userId\": \"dolor consectetur eiusmod dolor\",\n      \"roleId\": \"proident magna cu\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"id\": \"ut qui non dolore\",\n    \"accountId\": \"anim dolore\",\n    \"lat\": -89197492.16772956,\n    \"lng\": -9221258.607413277,\n    \"startDate\": \"2003-02-20T22:16:13.867Z\",\n    \"endDate\": \"2000-03-24T11:35:08.747Z\",\n    \"isActive\": false,\n    \"lateWarEnabled\": true,\n    \"earlyWarEnabled\": false,\n    \"lateWarPercentage\": 60,\n    \"lateWarMinHour\": -62613950.48962526,\n    \"earlyWarHour\": 14863208.225196317,\n    \"name\": \"elit est\",\n    \"code\": \"incididunt sint\",\n    \"imgUri\": \"nisi est esse fugiat\",\n    \"description\": \"magna sit et adipisicing cillum\",\n    \"street\": \"reprehenderit mollit\",\n    \"country\": \"Excepteur et dolore\",\n    \"city\": \"minim ex Ut adipisicing\",\n    \"state\": \"in deserunt\",\n    \"zip\": \"eu in cillum officia\",\n    \"projectUsers\": [\n     {\n      \"id\": \"Ut mollit eiusmod labore reprehenderit\",\n      \"projectId\": \"irure eiusmod ut\",\n      \"userId\": \"dolore ut ea est\",\n      \"roleId\": \"reprehenderit cillum sit velit\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"incididunt anim labore consequat\",\n      \"projectId\": \"sunt consequat\",\n      \"userId\": \"anim\",\n      \"roleId\": \"reprehenderit nisi\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ],\n  \"accountUser\": [\n   {\n    \"accountId\": \"id ut in Duis elit\",\n    \"userId\": \"incididunt\",\n    \"gender\": 1,\n    \"roleId\": \"ut deserunt commodo eu\",\n    \"activeProjectId\": \"culpa laborum Lorem Excepteur sint\",\n    \"isOwner\": false,\n    \"accountUserStatus\": 0,\n    \"firstName\": \"sed cillum enim pariatur\",\n    \"lastName\": \"magna aliqua in\",\n    \"phoneNumber\": \"sit Dui\",\n    \"jobTitle\": \"proident\",\n    \"verificationCode\": \"fugiat amet labore minim\",\n    \"user\": {\n     \"firstName\": \"ipsum commodo in eu\",\n     \"lastName\": \"dolor id\",\n     \"phone\": \"occaecat eiusmod id\",\n     \"profileImage\": \"nisi quis\",\n     \"imageUri\": \"Ut veniam\"\n    }\n   },\n   {\n    \"accountId\": \"consequat anim\",\n    \"userId\": \"esse Lorem tempor id est\",\n    \"gender\": 4,\n    \"roleId\": \"anim\",\n    \"activeProjectId\": \"elit dolore\",\n    \"isOwner\": true,\n    \"accountUserStatus\": 1,\n    \"firstName\": \"ipsum ex\",\n    \"lastName\": \"es\",\n    \"phoneNumber\": \"nulla velit\",\n    \"jobTitle\": \"aliqua ullamco et\",\n    \"verificationCode\": \"est consequat labore\",\n    \"user\": {\n     \"firstName\": \"Excepteur aliquip consectetur\",\n     \"lastName\": \"in sed Duis et\",\n     \"phone\": \"et voluptate\",\n     \"profileImage\": \"cillum esse\",\n     \"imageUri\": \"esse et\"\n    }\n   }\n  ]\n },\n {\n  \"id\": \"irure eu\",\n  \"vatId\": \"culpa dolore amet\",\n  \"isActive\": false,\n  \"parentAccountId\": \"consequat irure laborum mollit\",\n  \"code\": \"et ut irure\",\n  \"name\": \"ullamco id\",\n  \"phone\": \"dolor\",\n  \"logo\": \"qui dolor\",\n  \"street\": \"ad ipsum in anim\",\n  \"city\": \"nulla nisi\",\n  \"state\": \"cupidatat ipsum reprehenderit et\",\n  \"zip\": \"elit\",\n  \"countryCode\": \"quis\",\n  \"companySize\": \"ea sit ut in\",\n  \"regNumber\": \"irure\",\n  \"companyNumber\": \"mollit sunt id commodo\",\n  \"description\": \"officia eiusmod ex laborum\",\n  \"url\": \"elit id nostrud eiusmod\",\n  \"projects\": [\n   {\n    \"id\": \"sit pariatur cupidatat sint dolor\",\n    \"accountId\": \"eiusmod cillum\",\n    \"lat\": 23513626.242961243,\n    \"lng\": -8456058.028166696,\n    \"startDate\": \"1997-03-08T16:02:52.554Z\",\n    \"endDate\": \"1998-04-28T23:08:10.496Z\",\n    \"isActive\": true,\n    \"lateWarEnabled\": false,\n    \"earlyWarEnabled\": true,\n    \"lateWarPercentage\": 50,\n    \"lateWarMinHour\": 7883491.049721196,\n    \"earlyWarHour\": 50645858.22336659,\n    \"name\": \"nisi\",\n    \"code\": \"ut aliquip Ut\",\n    \"imgUri\": \"ullamco\",\n    \"description\": \"deser\",\n    \"street\": \"in in sit ex\",\n    \"country\": \"enim occaecat dolor ullamco\",\n    \"city\": \"laboris sed dolore\",\n    \"state\": \"nulla labore\",\n    \"zip\": \"esse cillum\",\n    \"projectUsers\": [\n     {\n      \"id\": \"commodo fugiat\",\n      \"projectId\": \"dolore ad dolor aliqua\",\n      \"userId\": \"dolore do laboris tempor deserunt\",\n      \"roleId\": \"sunt\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"consectetur velit\",\n      \"projectId\": \"do sed cillum\",\n      \"userId\": \"proident\",\n      \"roleId\": \"cupidatat laboris\",\n      \"isOwner\": true,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   },\n   {\n    \"id\": \"velit cillum\",\n    \"accountId\": \"proident eiu\",\n    \"lat\": -8093710.003935859,\n    \"lng\": 11950488.157390013,\n    \"startDate\": \"1945-05-01T12:25:31.067Z\",\n    \"endDate\": \"2013-12-25T09:41:28.488Z\",\n    \"isActive\": true,\n    \"lateWarEnabled\": false,\n    \"earlyWarEnabled\": true,\n    \"lateWarPercentage\": 0,\n    \"lateWarMinHour\": -66533701.72966775,\n    \"earlyWarHour\": 8357984.126242399,\n    \"name\": \"ut commodo et in\",\n    \"code\": \"Ut et quis do mollit\",\n    \"imgUri\": \"labore anim velit dolor\",\n    \"description\": \"magna exercitation elit ut au\",\n    \"street\": \"dolor esse voluptate\",\n    \"country\": \"magna Lorem sint ut\",\n    \"city\": \"fugiat\",\n    \"state\": \"ut esse est eu\",\n    \"zip\": \"culpa deserunt exercitation Lorem\",\n    \"projectUsers\": [\n     {\n      \"id\": \"anim elit dolore\",\n      \"projectId\": \"commodo consequat cillum\",\n      \"userId\": \"magna laborum\",\n      \"roleId\": \"ipsum deserunt est nostrud\",\n      \"isOwner\": true,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     },\n     {\n      \"id\": \"proident ut laborum magna Excepteur\",\n      \"projectId\": \"ut ex reprehenderit veniam\",\n      \"userId\": \"laboris proident\",\n      \"roleId\": \"eiusmod Duis voluptate laboris\",\n      \"isOwner\": false,\n      \"userRight\": [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      \"user\": {\n       \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n     }\n    ]\n   }\n  ],\n  \"accountUser\": [\n   {\n    \"accountId\": \"sit\",\n    \"userId\": \"anim sint\",\n    \"gender\": 4,\n    \"roleId\": \"amet aute voluptate\",\n    \"activeProjectId\": \"mollit commodo ut pariatur\",\n    \"isOwner\": false,\n    \"accountUserStatus\": 2,\n    \"firstName\": \"des\",\n    \"lastName\": \"p\",\n    \"phoneNumber\": \"nostrud fugiat Duis\",\n    \"jobTitle\": \"et dolore nisi proident consectetur\",\n    \"verificationCode\": \"commodo consectetur\",\n    \"user\": {\n     \"firstName\": \"esse\",\n     \"lastName\": \"sunt proident ea\",\n     \"phone\": \"Lorem ipsum commodo do\",\n     \"profileImage\": \"pariatur id ea aliquip\",\n     \"imageUri\": \"magna\"\n    }\n   },\n   {\n    \"accountId\": \"non velit sunt voluptate\",\n    \"userId\": \"sed\",\n    \"gender\": 1,\n    \"roleId\": \"tempor dolor sed\",\n    \"activeProjectId\": \"quis\",\n    \"isOwner\": true,\n    \"accountUserStatus\": 2,\n    \"firstName\": \"do adipisicing\",\n    \"lastName\": \"aute minim nostrud\",\n    \"phoneNumber\": \"velit qu\",\n    \"jobTitle\": \"aliquip n\",\n    \"verificationCode\": \"laboris magna amet reprehenderit dolore\",\n    \"user\": {\n     \"firstName\": \"in reprehenderit ad\",\n     \"lastName\": \"commodo quis deserunt do sed\",\n     \"phone\": \"dol\",\n     \"profileImage\": \"dolore ea Excepteur culpa\",\n     \"imageUri\": \"deserunt\"\n    }\n   }\n  ]\n }\n]"
								}
							]
						},
						{
							"name": "Sub Account Create Multiple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Body matches string\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"true\");",
											"});",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"subAccountOwnerId\": \"ff0af8c2-043c-4e4b-8db0-077e8b80da1c\",\n        \"isActive\": false,\n        \"name\": \"InactviveSubAccount by Priya\"\n    },\n    {\n        \"subAccountOwnerId\": \"ff0af8c2-043c-4e4b-8db0-077e8b80da1c\",\n        \"isActive\": true,\n        \"name\": \"SubAccount by Priya\"\n    }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/SubAccount/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SubAccount",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"subAccountOwnerId\": \"ipsum aliquip do\",\n        \"isActive\": true,\n        \"name\": \"id irure consequat laboris officia\"\n    },\n    {\n        \"subAccountOwnerId\": \"laborum eiusmod non voluptate\",\n        \"isActive\": true,\n        \"name\": \"qui incididunt id\"\n    }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SubAccount/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SubAccount",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "reprehenderit sunt incididunt"
								}
							]
						}
					]
				},
				{
					"name": "Project, Project User and Project User Right",
					"item": [
						{
							"name": "Project Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"console.log(response.id);\r",
											"if(response.id){\r",
											"    \r",
											"    pm.test(\"Body Returns Id\",()=>{\r",
											"        pm.expect(response.id).to.be.not.eql(\"null\")\r",
											"    },\r",
											"    pm.globals.set(\"ProjectId\",response.id)\r",
											")\r",
											"}\r",
											"else{\r",
											"    console.log(\"No Project Id Returned\");\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New Test Project\",\n  \"accountId\": \"{{AccountUserId}}\",//Account User Id\n  \"code\": \"string\",\n  \"imgUri\": \"string\",\n  \"lat\": 0,\n  \"lng\": 0,\n  \"description\": \"This is for API Testing\",\n  \"startDate\": \"2022-02-17T11:29:10.550Z\",\n  \"endDate\": \"2022-02-17T11:29:10.550Z\",\n  \"street\": \"string\",\n  \"country\": \"string\",\n  \"city\": \"string\",\n  \"state\": \"string\",\n  \"zip\": \"string\",\n  \"isActive\": true,\n  \"lateWarEnabled\": true,\n  \"earlyWarEnabled\": true,\n  \"lateWarPercentage\": 0,\n  \"lateWarMinHour\": 0,\n  \"earlyWarHour\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Project/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Project",
										"Create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"accountId\": \"in ad\",\n    \"lat\": 8814979.53979738,\n    \"lng\": 74074707.26156169,\n    \"startDate\": \"1973-08-16T15:22:18.756Z\",\n    \"endDate\": \"1986-09-28T00:11:42.313Z\",\n    \"isActive\": false,\n    \"lateWarEnabled\": true,\n    \"earlyWarEnabled\": true,\n    \"lateWarPercentage\": 0,\n    \"lateWarMinHour\": 26494253.02706158,\n    \"earlyWarHour\": 24074187.036299303,\n    \"name\": \"do pariatur quis reprehenderit\",\n    \"code\": \"oc\",\n    \"imgUri\": \"cillum officia\",\n    \"description\": \"Duis culpa id\",\n    \"street\": \"culpa anim\",\n    \"country\": \"sit magna do\",\n    \"city\": \"adipisicing ex pariatur\",\n    \"state\": \"exercitation consectetur et\",\n    \"zip\": \"Excepteur reprehenderit deserun\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Project/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Project",
												"Create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"veniam ad\",\n \"accountId\": \"ipsum Ut incididunt proident amet\",\n \"lat\": -89225887.17750236,\n \"lng\": -90965082.8377012,\n \"startDate\": \"2020-05-30T14:48:24.032Z\",\n \"endDate\": \"2016-01-20T15:14:05.792Z\",\n \"isActive\": false,\n \"lateWarEnabled\": true,\n \"earlyWarEnabled\": true,\n \"lateWarPercentage\": 50,\n \"lateWarMinHour\": -9750930.738390684,\n \"earlyWarHour\": -90778381.12073126,\n \"name\": \"dolore\",\n \"code\": \"consectetur cupida\",\n \"imgUri\": \"cillum officia id\",\n \"description\": \"irure ipsum sit non\",\n \"street\": \"consectetur quis magna eiusmod\",\n \"country\": \"non dolore\",\n \"city\": \"occaecat nostrud\",\n \"state\": \"Excepteur\",\n \"zip\": \"id nulla\",\n \"projectUsers\": [\n  {\n   \"id\": \"proident in\",\n   \"projectId\": \"Lorem laborum eiusmod in fugiat\",\n   \"userId\": \"fugia\",\n   \"roleId\": \"nisi aliquip ea minim\",\n   \"isOwner\": false,\n   \"userRight\": [\n    {\n     \"deleted\": false,\n     \"id\": \"in dolor\",\n     \"refId\": \"veniam cupidatat non sit\",\n     \"rightId\": \"pariatur incididunt ad\",\n     \"userId\": \"id nisi quis laboris\",\n     \"createdBy\": \"nostrud dolor eiusmod exercitation\",\n     \"createdWhen\": \"2007-01-15T01:04:44.915Z\",\n     \"modifiedBy\": \"sint nulla anim dolor irure\",\n     \"modifiedWhen\": \"1989-05-22T07:39:31.469Z\"\n    },\n    {\n     \"deleted\": true,\n     \"id\": \"laborum laboris Ut dolore ea\",\n     \"refId\": \"in do e\",\n     \"rightId\": \"pariatur\",\n     \"userId\": \"ullamco nulla ipsum est consectetur\",\n     \"createdBy\": \"nisi\",\n     \"createdWhen\": \"2021-04-13T01:51:14.676Z\",\n     \"modifiedBy\": \"proident laboris nostrud\",\n     \"modifiedWhen\": \"1987-12-20T05:46:12.115Z\"\n    }\n   ],\n   \"user\": {\n    \"firstName\": \"elit sit exercitation\",\n    \"lastName\": \"in proident\",\n    \"phone\": \"officia reprehenderit ex labore\",\n    \"profileImage\": \"sunt laboris aliquip\",\n    \"imageUri\": \"incididunt est Excepteur veniam\"\n   }\n  },\n  {\n   \"id\": \"labore fugiat\",\n   \"projectId\": \"adipisicing\",\n   \"userId\": \"in ea\",\n   \"roleId\": \"pariatur consequat\",\n   \"isOwner\": true,\n   \"userRight\": [\n    {\n     \"deleted\": false,\n     \"id\": \"id culpa\",\n     \"refId\": \"ullamco n\",\n     \"rightId\": \"irure quis\",\n     \"userId\": \"pariatur eu incidi\",\n     \"createdBy\": \"sunt in\",\n     \"createdWhen\": \"1969-06-19T16:15:09.539Z\",\n     \"modifiedBy\": \"quis\",\n     \"modifiedWhen\": \"1951-07-16T11:32:44.578Z\"\n    },\n    {\n     \"deleted\": false,\n     \"id\": \"laborum commodo\",\n     \"refId\": \"ut laborum\",\n     \"rightId\": \"ut dolore\",\n     \"userId\": \"id non\",\n     \"createdBy\": \"dolore nostrud dolor ipsum\",\n     \"createdWhen\": \"1977-06-22T01:12:46.784Z\",\n     \"modifiedBy\": \"reprehenderit ad \",\n     \"modifiedWhen\": \"1948-10-05T10:15:02.033Z\"\n    }\n   ],\n   \"user\": {\n    \"firstName\": \"magna aliqua consequat\",\n    \"lastName\": \"quis enim\",\n    \"phone\": \"ex mollit do\",\n    \"profileImage\": \"commodo incididunt\",\n    \"imageUri\": \"eiusmod Lorem velit non aute\"\n   }\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Project Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Returning True Status, Project Updated\",()=>{\r",
											"    pm.expect(pm.response.json()).to.be.eql(true)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{ProjectId}}\",//Created Project Id\n    \"accountId\": \"{{AccountId}}\", //Account Id\n    \"lat\": 60228703.54711515,\n    \"lng\": -55760342.19301911,\n    \"startDate\": \"1987-07-04T23:04:18.009Z\",\n    \"endDate\": \"1993-08-19T01:21:58.988Z\",\n    \"isActive\": false,\n    \"lateWarEnabled\": false,\n    \"earlyWarEnabled\": false,\n    \"lateWarPercent\": 60,\n    \"lateWarMinHour\": 42684638.22070193,\n    \"earlyWarHour\": 89000592.00618169,\n    \"name\": \"Test Project Updated\",\n    \"code\": \"0900000000\",\n    \"imgUri\": \"irure dolore\",\n    \"description\": \"dolore\",\n    \"street\": \"Lorem cupidatat minim reprehenderit veniam\",\n    \"country\": \"in dolore magna\",\n    \"city\": \"esse d\",\n    \"state\": \"Excep\",\n    \"zip\": \"adipisicing consectetur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Project/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Project",
										"Update"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"laboris deserunt aute ex\",\n    \"accountId\": \"dolor cupidatat\",\n    \"lat\": 60228703.54711515,\n    \"lng\": -55760342.19301911,\n    \"startDate\": \"1987-07-04T23:04:18.009Z\",\n    \"endDate\": \"1993-08-19T01:21:58.988Z\",\n    \"isActive\": false,\n    \"lateWarEnabled\": false,\n    \"earlyWarEnabled\": false,\n    \"lateWarPercent\": 60,\n    \"lateWarMinHour\": 42684638.22070193,\n    \"earlyWarHour\": 89000592.00618169,\n    \"name\": \"incididunt nostrud\",\n    \"code\": \"enim est cupidatat\",\n    \"imgUri\": \"irure dolore\",\n    \"description\": \"dolore\",\n    \"street\": \"Lorem cupidatat minim reprehenderit veniam\",\n    \"country\": \"in dolore magna\",\n    \"city\": \"esse d\",\n    \"state\": \"Excep\",\n    \"zip\": \"adipisicing consectetur\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Project/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Project",
												"Update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "true"
								}
							]
						},
						{
							"name": "Project Get By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Id",
										"value": "{{ProjectId}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Project/GetById",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Project",
										"GetById"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"key": "Id",
												"value": "reprehenderit sunt incididunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Project/GetById",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Project",
												"GetById"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"veniam ad\",\n \"accountId\": \"ipsum Ut incididunt proident amet\",\n \"lat\": -89225887.17750236,\n \"lng\": -90965082.8377012,\n \"startDate\": \"2020-05-30T14:48:24.032Z\",\n \"endDate\": \"2016-01-20T15:14:05.792Z\",\n \"isActive\": false,\n \"lateWarEnabled\": true,\n \"earlyWarEnabled\": true,\n \"lateWarPercentage\": 50,\n \"lateWarMinHour\": -9750930.738390684,\n \"earlyWarHour\": -90778381.12073126,\n \"name\": \"dolore\",\n \"code\": \"consectetur cupida\",\n \"imgUri\": \"cillum officia id\",\n \"description\": \"irure ipsum sit non\",\n \"street\": \"consectetur quis magna eiusmod\",\n \"country\": \"non dolore\",\n \"city\": \"occaecat nostrud\",\n \"state\": \"Excepteur\",\n \"zip\": \"id nulla\",\n \"projectUsers\": [\n  {\n   \"id\": \"proident in\",\n   \"projectId\": \"Lorem laborum eiusmod in fugiat\",\n   \"userId\": \"fugia\",\n   \"roleId\": \"nisi aliquip ea minim\",\n   \"isOwner\": false,\n   \"userRight\": [\n    {\n     \"deleted\": false,\n     \"id\": \"in dolor\",\n     \"refId\": \"veniam cupidatat non sit\",\n     \"rightId\": \"pariatur incididunt ad\",\n     \"userId\": \"id nisi quis laboris\",\n     \"createdBy\": \"nostrud dolor eiusmod exercitation\",\n     \"createdWhen\": \"2007-01-15T01:04:44.915Z\",\n     \"modifiedBy\": \"sint nulla anim dolor irure\",\n     \"modifiedWhen\": \"1989-05-22T07:39:31.469Z\"\n    },\n    {\n     \"deleted\": true,\n     \"id\": \"laborum laboris Ut dolore ea\",\n     \"refId\": \"in do e\",\n     \"rightId\": \"pariatur\",\n     \"userId\": \"ullamco nulla ipsum est consectetur\",\n     \"createdBy\": \"nisi\",\n     \"createdWhen\": \"2021-04-13T01:51:14.676Z\",\n     \"modifiedBy\": \"proident laboris nostrud\",\n     \"modifiedWhen\": \"1987-12-20T05:46:12.115Z\"\n    }\n   ],\n   \"user\": {\n    \"firstName\": \"elit sit exercitation\",\n    \"lastName\": \"in proident\",\n    \"phone\": \"officia reprehenderit ex labore\",\n    \"profileImage\": \"sunt laboris aliquip\",\n    \"imageUri\": \"incididunt est Excepteur veniam\"\n   }\n  },\n  {\n   \"id\": \"labore fugiat\",\n   \"projectId\": \"adipisicing\",\n   \"userId\": \"in ea\",\n   \"roleId\": \"pariatur consequat\",\n   \"isOwner\": true,\n   \"userRight\": [\n    {\n     \"deleted\": false,\n     \"id\": \"id culpa\",\n     \"refId\": \"ullamco n\",\n     \"rightId\": \"irure quis\",\n     \"userId\": \"pariatur eu incidi\",\n     \"createdBy\": \"sunt in\",\n     \"createdWhen\": \"1969-06-19T16:15:09.539Z\",\n     \"modifiedBy\": \"quis\",\n     \"modifiedWhen\": \"1951-07-16T11:32:44.578Z\"\n    },\n    {\n     \"deleted\": false,\n     \"id\": \"laborum commodo\",\n     \"refId\": \"ut laborum\",\n     \"rightId\": \"ut dolore\",\n     \"userId\": \"id non\",\n     \"createdBy\": \"dolore nostrud dolor ipsum\",\n     \"createdWhen\": \"1977-06-22T01:12:46.784Z\",\n     \"modifiedBy\": \"reprehenderit ad \",\n     \"modifiedWhen\": \"1948-10-05T10:15:02.033Z\"\n    }\n   ],\n   \"user\": {\n    \"firstName\": \"magna aliqua consequat\",\n    \"lastName\": \"quis enim\",\n    \"phone\": \"ex mollit do\",\n    \"profileImage\": \"commodo incididunt\",\n    \"imageUri\": \"eiusmod Lorem velit non aute\"\n   }\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Project Get Project List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"console.log(pm.response.json().length);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Project/GetProjectList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Project",
										"GetProjectList"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Project/GetProjectList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Project",
												"GetProjectList"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"elit id non consectetur\",\n  \"accountId\": \"nostrud consequat labore ea\",\n  \"lat\": -61432794.90798865,\n  \"lng\": -70809621.42296556,\n  \"startDate\": \"1988-12-05T03:01:13.717Z\",\n  \"endDate\": \"1978-11-25T18:11:38.869Z\",\n  \"isActive\": true,\n  \"lateWarEnabled\": false,\n  \"earlyWarEnabled\": false,\n  \"lateWarPercentage\": 0,\n  \"lateWarMinHour\": 2662191.8347828835,\n  \"earlyWarHour\": 53731928.456276715,\n  \"name\": \"elit esse Excepteur ex\",\n  \"code\": \"Duis eu minim mollit\",\n  \"imgUri\": \"ad pariatur\",\n  \"description\": \"aliqua reprehenderit\",\n  \"street\": \"mollit dolor Excepteur\",\n  \"country\": \"deserunt cupidatat qui\",\n  \"city\": \"voluptate officia qui\",\n  \"state\": \"incididunt Excepteur cupidatat anim\",\n  \"zip\": \"in velit dolore ex\",\n  \"projectUsers\": [\n   {\n    \"id\": \"nostrud occaecat ipsum irure incididunt\",\n    \"projectId\": \"reprehenderit aute sint culpa\",\n    \"userId\": \"labore deserunt occae\",\n    \"roleId\": \"sint est irure laboris\",\n    \"isOwner\": true,\n    \"userRight\": [\n     {\n      \"deleted\": false,\n      \"id\": \"\",\n      \"refId\": \"dolore U\",\n      \"rightId\": \"non\",\n      \"userId\": \"dolor esse amet sed\",\n      \"createdBy\": \"ipsum commodo cillum\",\n      \"createdWhen\": \"1982-07-10T11:59:45.820Z\",\n      \"modifiedBy\": \"veniam\",\n      \"modifiedWhen\": \"1961-12-10T10:13:35.507Z\"\n     },\n     {\n      \"deleted\": false,\n      \"id\": \"cupidatat\",\n      \"refId\": \"nulla do\",\n      \"rightId\": \"in id nostrud exercitation consequat\",\n      \"userId\": \"pariatur aliqua sed \",\n      \"createdBy\": \"dolor magna\",\n      \"createdWhen\": \"2001-05-21T13:49:33.023Z\",\n      \"modifiedBy\": \"fugiat eu\",\n      \"modifiedWhen\": \"1965-02-27T04:25:01.675Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"nostrud\",\n     \"lastName\": \"ad enim consectetur adipisicing\",\n     \"phone\": \"dolor ipsum aute ullamco\",\n     \"profileImage\": \"eu esse\",\n     \"imageUri\": \"commodo labore id\"\n    }\n   },\n   {\n    \"id\": \"incididunt sit\",\n    \"projectId\": \"laborum occaecat minim sit proident\",\n    \"userId\": \"cupidatat nisi sit\",\n    \"roleId\": \"eu adipisicing nisi non\",\n    \"isOwner\": true,\n    \"userRight\": [\n     {\n      \"deleted\": true,\n      \"id\": \"mollit enim\",\n      \"refId\": \"voluptate enim mollit Ut ex\",\n      \"rightId\": \"nisi nostrud\",\n      \"userId\": \"ullamco adipisicing\",\n      \"createdBy\": \"fugiat elit in consectetur\",\n      \"createdWhen\": \"2012-08-10T04:16:40.948Z\",\n      \"modifiedBy\": \"deserunt proident eu quis et\",\n      \"modifiedWhen\": \"2020-08-11T14:12:55.697Z\"\n     },\n     {\n      \"deleted\": false,\n      \"id\": \"in\",\n      \"refId\": \"eiusmod mollit\",\n      \"rightId\": \"fugiat proident quis\",\n      \"userId\": \"minim ex ut laborum quis\",\n      \"createdBy\": \"aute nostrud irur\",\n      \"createdWhen\": \"1998-10-09T19:49:42.883Z\",\n      \"modifiedBy\": \"Ut consequat in est\",\n      \"modifiedWhen\": \"1952-03-01T09:44:37.909Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"nostrud dolor aliquip\",\n     \"lastName\": \"non occaecat reprehenderit\",\n     \"phone\": \"anim veniam qui fugiat\",\n     \"profileImage\": \"proident fugiat ex enim cillum\",\n     \"imageUri\": \"occaecat aute non ea et\"\n    }\n   }\n  ]\n },\n {\n  \"id\": \"sunt\",\n  \"accountId\": \"amet eiusmod exercitation officia\",\n  \"lat\": -4370872.411092192,\n  \"lng\": 92410171.91806886,\n  \"startDate\": \"2019-07-25T10:40:33.965Z\",\n  \"endDate\": \"2011-09-30T03:47:56.825Z\",\n  \"isActive\": false,\n  \"lateWarEnabled\": true,\n  \"earlyWarEnabled\": true,\n  \"lateWarPercentage\": 0,\n  \"lateWarMinHour\": -25597213.824367985,\n  \"earlyWarHour\": -34896264.919414535,\n  \"name\": \"ipsum enim\",\n  \"code\": \"reprehenderit sint\",\n  \"imgUri\": \"esse amet\",\n  \"description\": \"dolor anim irure non cillum\",\n  \"street\": \"do laborum\",\n  \"country\": \"amet adipisicing in\",\n  \"city\": \"incididunt ut\",\n  \"state\": \"Lorem dolor minim sunt\",\n  \"zip\": \"Lorem ipsum sit exercitation proident\",\n  \"projectUsers\": [\n   {\n    \"id\": \"sed ipsum\",\n    \"projectId\": \"enim veniam amet\",\n    \"userId\": \"velit ut\",\n    \"roleId\": \"incididunt minim non officia\",\n    \"isOwner\": true,\n    \"userRight\": [\n     {\n      \"deleted\": false,\n      \"id\": \"e\",\n      \"refId\": \"officia\",\n      \"rightId\": \"consequat eu\",\n      \"userId\": \"adipisicing ad est mollit\",\n      \"createdBy\": \"Lorem\",\n      \"createdWhen\": \"1963-12-20T11:50:31.150Z\",\n      \"modifiedBy\": \"commodo\",\n      \"modifiedWhen\": \"1968-10-12T17:23:55.797Z\"\n     },\n     {\n      \"deleted\": false,\n      \"id\": \"incididunt anim commo\",\n      \"refId\": \"aute sed minim\",\n      \"rightId\": \"dolor ad anim aliqua\",\n      \"userId\": \"in fugiat veniam proident\",\n      \"createdBy\": \"proident in ad reprehenderit\",\n      \"createdWhen\": \"1973-02-12T12:49:26.665Z\",\n      \"modifiedBy\": \"mollit do in nulla Ut\",\n      \"modifiedWhen\": \"1952-07-25T09:51:30.709Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"culpa dolor Excepteur amet\",\n     \"lastName\": \"cillum et aliqua anim\",\n     \"phone\": \"pariatur\",\n     \"profileImage\": \"in ad Lorem et consectetur\",\n     \"imageUri\": \"proident dolor mollit\"\n    }\n   },\n   {\n    \"id\": \"cillum sint esse\",\n    \"projectId\": \"sunt magna in eu qui\",\n    \"userId\": \"enim cupidatat eiusmod\",\n    \"roleId\": \"consequat consectetur incididunt id\",\n    \"isOwner\": true,\n    \"userRight\": [\n     {\n      \"deleted\": true,\n      \"id\": \"Lorem sed id ipsum\",\n      \"refId\": \"commodo dolore\",\n      \"rightId\": \"minim culpa Duis\",\n      \"userId\": \"minim est fugiat consequat eu\",\n      \"createdBy\": \"labore\",\n      \"createdWhen\": \"1982-04-25T23:40:22.221Z\",\n      \"modifiedBy\": \"ullamco cupidatat culpa incididunt\",\n      \"modifiedWhen\": \"1950-02-03T11:23:40.796Z\"\n     },\n     {\n      \"deleted\": true,\n      \"id\": \"in cillum\",\n      \"refId\": \"qui ut\",\n      \"rightId\": \"fugiat dol\",\n      \"userId\": \"minim sint commodo dolore ad\",\n      \"createdBy\": \"ullamco Duis irure\",\n      \"createdWhen\": \"1991-11-23T12:37:33.779Z\",\n      \"modifiedBy\": \"dolor enim magna deserunt\",\n      \"modifiedWhen\": \"2015-06-18T08:49:29.069Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"exercitation incididunt veniam id\",\n     \"lastName\": \"voluptate eu laborum\",\n     \"phone\": \"nulla\",\n     \"profileImage\": \"esse nisi minim\",\n     \"imageUri\": \"dolor dolore consectetur labo\"\n    }\n   }\n  ]\n }\n]"
								}
							]
						},
						{
							"name": "Project Set Active Project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status Set to Active\",()=>{\r",
											"    pm.expect(pm.response.json()).to.be.eql(true);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Project/SetActiveProject?Id={{ProjectId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Project",
										"SetActiveProject"
									],
									"query": [
										{
											"key": "Id",
											"value": "{{ProjectId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Project/SetActiveProject?Id=reprehenderit sunt incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Project",
												"SetActiveProject"
											],
											"query": [
												{
													"key": "Id",
													"value": "reprehenderit sunt incididunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "true"
								}
							]
						},
						{
							"name": "Project User Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = JSON.parse(responseBody);",
											"",
											"pm.globals.set(\"ProjectUserId\",response.id);",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Counting Response keys\", function(){",
											"var responseKeyListCount = Object.keys(response).length;",
											"console.log(\"Response keys count is: \"+ responseKeyListCount);",
											"})",
											"",
											"pm.test(\"Checking keys values not null\", function(){",
											"    for(let key of Object.keys(response)) {",
											"    if(key !=null){",
											"        console.log(key + \" value is: \"+ response[key]);",
											"    }else{",
											"        console.log(key +\" Value is: \"+ response[key]);",
											"    }",
											"}",
											"});",
											"",
											"pm.test(\"Check the user added in the selected project\", function () {",
											"    let actualData=pm.iterationData.get(\"ProjectId\") ;",
											"    let expectedData = response.projectId.value;",
											"    pm.expect(expectedData).to.eql(actualData);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"projectId\": \"{{ProjectId}}\",\n    \"userId\": \"{{AccountUserId}}\",\n    \"roleId\": \"{{ProjectOwnerRoleId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ProjectUser/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ProjectUser",
										"Create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"projectId\": \"laboris consequat nulla\",\n    \"userId\": \"dolore ex veniam\",\n    \"roleId\": \"eu veniam do non enim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ProjectUser/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ProjectUser",
												"Create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"minim est aliqua esse cillum\",\n \"projectId\": \"ad id\",\n \"userId\": \"laborum voluptate ullamco Duis\",\n \"roleId\": \"aliquip magna do in\",\n \"isOwner\": true,\n \"userRight\": [\n  {\n   \"deleted\": false,\n   \"id\": \"Ut ea cupidatat\",\n   \"refId\": \"aliquip eu\",\n   \"rightId\": \"Duis ut ullamco\",\n   \"userId\": \"aliqua occaecat Excepteur velit\",\n   \"createdBy\": \"cillum cupidatat\",\n   \"createdWhen\": \"1971-10-11T03:18:13.507Z\",\n   \"modifiedBy\": \"et exercitation dolore\",\n   \"modifiedWhen\": \"1992-04-01T13:25:52.421Z\"\n  },\n  {\n   \"deleted\": false,\n   \"id\": \"dolore\",\n   \"refId\": \"fugiat\",\n   \"rightId\": \"irure dolore id in\",\n   \"userId\": \"laboris consectetur cupidatat proident\",\n   \"createdBy\": \"irure\",\n   \"createdWhen\": \"1979-12-16T02:30:44.394Z\",\n   \"modifiedBy\": \"sunt tempor reprehenderit ut cillum\",\n   \"modifiedWhen\": \"2017-05-20T02:35:43.039Z\"\n  }\n ],\n \"user\": {\n  \"firstName\": \"est sit consect\",\n  \"lastName\": \"voluptate ad Excepteur nulla\",\n  \"phone\": \"mollit dolore consectetur\",\n  \"profileImage\": \"nulla Duis\",\n  \"imageUri\": \"cupidatat elit\"\n }\n}"
								}
							]
						},
						{
							"name": "Project User Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Project User Updated\", function () {",
											"    var response = pm.response.json();",
											"    pm.expect(response).to.eql(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{ProjectUserId}}\",//ProjectUserId\n    \"projectId\": \"{{ProjectId}}\",\n    \"userId\": \"{{UserIdFromDB}}\",\n    \"roleId\": \"{{ProjectOwnerRoleId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ProjectUser/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ProjectUser",
										"Update"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"de\",\n    \"projectId\": \"sunt consequat et\",\n    \"userId\": \"sed anim ad incididunt\",\n    \"roleId\": \"ex proident fugiat eiusmod\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ProjectUser/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ProjectUser",
												"Update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "true"
								}
							]
						},
						{
							"name": "Project User Get By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Checking the selected project user data is displaying or not\", function () {",
											"    let actualData=pm.iterationData.get(\"ProjectUserId\") ;",
											"    pm.expect(pm.response.json().id.value).to.eql(actualData);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Id",
										"value": "{{ProjectUserId}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/ProjectUser/GetById",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ProjectUser",
										"GetById"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"key": "Id",
												"value": "reprehenderit sunt incididunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/ProjectUser/GetById",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ProjectUser",
												"GetById"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"minim est aliqua esse cillum\",\n \"projectId\": \"ad id\",\n \"userId\": \"laborum voluptate ullamco Duis\",\n \"roleId\": \"aliquip magna do in\",\n \"isOwner\": true,\n \"userRight\": [\n  {\n   \"deleted\": false,\n   \"id\": \"Ut ea cupidatat\",\n   \"refId\": \"aliquip eu\",\n   \"rightId\": \"Duis ut ullamco\",\n   \"userId\": \"aliqua occaecat Excepteur velit\",\n   \"createdBy\": \"cillum cupidatat\",\n   \"createdWhen\": \"1971-10-11T03:18:13.507Z\",\n   \"modifiedBy\": \"et exercitation dolore\",\n   \"modifiedWhen\": \"1992-04-01T13:25:52.421Z\"\n  },\n  {\n   \"deleted\": false,\n   \"id\": \"dolore\",\n   \"refId\": \"fugiat\",\n   \"rightId\": \"irure dolore id in\",\n   \"userId\": \"laboris consectetur cupidatat proident\",\n   \"createdBy\": \"irure\",\n   \"createdWhen\": \"1979-12-16T02:30:44.394Z\",\n   \"modifiedBy\": \"sunt tempor reprehenderit ut cillum\",\n   \"modifiedWhen\": \"2017-05-20T02:35:43.039Z\"\n  }\n ],\n \"user\": {\n  \"firstName\": \"est sit consect\",\n  \"lastName\": \"voluptate ad Excepteur nulla\",\n  \"phone\": \"mollit dolore consectetur\",\n  \"profileImage\": \"nulla Duis\",\n  \"imageUri\": \"cupidatat elit\"\n }\n}"
								}
							]
						},
						{
							"name": "Project User Get Project User List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Count the users under the project\", function () {",
											"    let response= pm.response.json();",
											"    let users;",
											"    for(users=0; users<response.length; users++){",
											"        if(response[users].userId !=null){",
											"            console.log(\"Users [\" +users+\"] id is: \" + response[users].id)",
											"        }",
											"    }",
											"    console.log(\"Number of users at the project level is:  \"+ users);",
											"});",
											"",
											"pm.globals.unset(\"Id\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "ProjectId",
										"value": "{{ProjectId}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ProjectUser/GetProjectUserList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ProjectUser",
										"GetProjectUserList"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											},
											{
												"key": "ProjectId",
												"value": "reprehenderit sunt incididunt"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/ProjectUser/GetProjectUserList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ProjectUser",
												"GetProjectUserList"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"enim nisi nulla Ut velit\",\n  \"projectId\": \"elit labore\",\n  \"userId\": \"ipsum tempor ea ut\",\n  \"roleId\": \"amet ad id irure adipisicing\",\n  \"isOwner\": true,\n  \"userRight\": [\n   {\n    \"deleted\": false,\n    \"id\": \"nisi ad\",\n    \"refId\": \"laborum adipisicing tempor nostrud do\",\n    \"rightId\": \"id ea\",\n    \"userId\": \"cillum deserunt sed laborum v\",\n    \"createdBy\": \"dolore officia consequat\",\n    \"createdWhen\": \"1956-11-07T02:32:58.176Z\",\n    \"modifiedBy\": \"sed cillum do\",\n    \"modifiedWhen\": \"1945-12-15T20:00:33.008Z\"\n   },\n   {\n    \"deleted\": false,\n    \"id\": \"eiusmod id minim ut\",\n    \"refId\": \"qui deserunt\",\n    \"rightId\": \"non exercitation in Duis\",\n    \"userId\": \"aliquip proident ut reprehenderit\",\n    \"createdBy\": \"eiusmod magna ullamco laboris exercitation\",\n    \"createdWhen\": \"2001-07-04T19:57:06.077Z\",\n    \"modifiedBy\": \"veniam nisi\",\n    \"modifiedWhen\": \"1952-10-18T18:20:19.326Z\"\n   }\n  ],\n  \"user\": {\n   \"firstName\": \"et\",\n   \"lastName\": \"et non mollit ipsum\",\n   \"phone\": \"proident Excepteur\",\n   \"profileImage\": \"dolore in non ipsum\",\n   \"imageUri\": \"aute labore exercitation culpa\"\n  }\n },\n {\n  \"id\": \"ipsum est\",\n  \"projectId\": \"nul\",\n  \"userId\": \"reprehenderit dolor proident\",\n  \"roleId\": \"eu laborum sunt qui\",\n  \"isOwner\": true,\n  \"userRight\": [\n   {\n    \"deleted\": false,\n    \"id\": \"sunt cillum\",\n    \"refId\": \"laborum \",\n    \"rightId\": \"in veniam\",\n    \"userId\": \"pariatur minim laboris qui nulla\",\n    \"createdBy\": \"tempor in officia\",\n    \"createdWhen\": \"2016-08-19T13:48:08.678Z\",\n    \"modifiedBy\": \"dolore elit mollit Ut dolor\",\n    \"modifiedWhen\": \"1944-10-03T08:42:05.834Z\"\n   },\n   {\n    \"deleted\": true,\n    \"id\": \"eu\",\n    \"refId\": \"dolor fugiat\",\n    \"rightId\": \"nisi dolore Excepteur proident do\",\n    \"userId\": \"dolor laborum\",\n    \"createdBy\": \"exercitation in esse dolore\",\n    \"createdWhen\": \"1991-06-30T14:33:53.403Z\",\n    \"modifiedBy\": \"aute dolore\",\n    \"modifiedWhen\": \"1969-10-07T06:47:37.409Z\"\n   }\n  ],\n  \"user\": {\n   \"firstName\": \"elit incididunt pariatur\",\n   \"lastName\": \"cupidatat in\",\n   \"phone\": \"ipsum non tempor proident\",\n   \"profileImage\": \"et magna dolor cillum eiusmod\",\n   \"imageUri\": \"in et dolore adi\"\n  }\n }\n]"
								}
							]
						},
						{
							"name": "Project User Right Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    \r",
											"});\r",
											" const response=pm.response.json();\r",
											"pm.globals.set(\"ProjectUserRightId\",response.id);\r",
											"pm.test(\"Project User Id not Null\",()=>{\r",
											"\r",
											"   \r",
											"    pm.expect(response.projectUserId).is.not.eql(\"00000000-0000-0000-0000-000000000000\");\r",
											"})\r",
											"pm.test(\"Reference Id returning after Successful Assigning of Right\",()=>{\r",
											"    const response=pm.response.json();\r",
											"    pm.expect(response.id).is.not.null;\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"rightId\": \"{{AddBoardMemberRightIdDB}}\",\n    \"projectUserId\": \"{{ProjectUserId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ProjectUserRight/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ProjectUserRight",
										"Create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"rightId\": \"commodo reprehenderit Duis\",\n    \"projectUserId\": \"ea dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/ProjectUserRight/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ProjectUserRight",
												"Create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"deserunt\",\n \"rightId\": \"velit\",\n \"projectUserId\": \"ut ad\"\n}"
								}
							]
						},
						{
							"name": "Project User Right Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{ProjectUserRightId}}\",//projectUserRightID\n    \"rightId\": \"{{CreateActivityRightIdDB}}\",//Create Activity Right\n    \"projectUserId\": \"{{ProjectUserId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/ProjectUserRight/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ProjectUserRight",
										"Update"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/ProjectUserRight/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ProjectUserRight",
												"Update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "true"
								}
							]
						},
						{
							"name": "Project User Right Get By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"if(response.id){\r",
											"    pm.test(\"Returning Project User Right Details\",()=>{\r",
											"        pm.expect(response.id.length).to.be.greaterThan(0)\r",
											"    })\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/ProjectUserRight/GetById?Id={{ProjectUserRightId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ProjectUserRight",
										"GetById"
									],
									"query": [
										{
											"key": "Id",
											"value": "{{ProjectUserRightId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/ProjectUserRight/GetById?Id=reprehenderit sunt incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ProjectUserRight",
												"GetById"
											],
											"query": [
												{
													"key": "Id",
													"value": "reprehenderit sunt incididunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"deserunt\",\n \"rightId\": \"velit\",\n \"projectUserId\": \"ut ad\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Board and BoardUserRight Copy",
					"item": [
						{
							"name": "Board Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();",
											"pm.globals.set(\"BoardId\", response.id);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Counting Response keys\", function(){",
											"var responseKeyListCount = Object.keys(response).length;",
											"console.log(\"Response keys count is: \"+ responseKeyListCount);",
											"})",
											"",
											"pm.test(\"Checking keys value not null\", function(){",
											"    for(let key of Object.keys(response)) {",
											"    if(key !=null){",
											"        console.log(key + \" value is: \"+ response[key]);",
											"    }else{",
											"        console.log(key +\" Value is null\");",
											"    }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{AccountUserId}}\",\n    \"projectId\": \"{{ProjectId}}\",\n    \"imageUri\": false,\n    \"workItemApproval\": 4,\n    \"earlyWarningEnabled\": false,\n    \"lateWarningEnabled\": false,\n    \"lateWarPercentage\": 60,\n    \"name\": \"voluptate tempor\",\n    \"code\": \"sunt ea laboris\",\n    \"boardColor\": \"esse Ut nisi dolore adipisicing\",\n    \"description\": \"mollit aute\",\n    \"lateWarningHours\": \"consequat minim\",\n    \"earlyWarningHours\": \"cupidatat culpa\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Board/Create/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Board",
										"Create",
										"Create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Board/Create/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Board",
												"Create",
												"Create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"Lorem\",\n \"projectId\": \"ut officia\",\n \"imageUri\": true,\n \"workItemApproval\": 4,\n \"earlyWarningEnabled\": true,\n \"lateWarningEnabled\": false,\n \"lateWarPercentage\": 60,\n \"name\": \"do\",\n \"code\": \"sit Duis dolor nisi\",\n \"boardColor\": \"consectetur et ad\",\n \"description\": \"ut sit id fugiat\",\n \"lateWarningHours\": \"culpa laboris adipisicing\",\n \"earlyWarningHours\": \"deserunt elit reprehenderit id\",\n \"boardUsers\": [\n  {\n   \"id\": \"ipsum minim in cupidatat commodo\",\n   \"userId\": \"aute reprehenderit dolor dolore\",\n   \"boardId\": \"esse dolor ex\",\n   \"roleId\": \"ea esse quis amet\",\n   \"isOwner\": false,\n   \"selected\": true,\n   \"userRight\": [\n    {\n     \"deleted\": true,\n     \"id\": \"sit voluptate\",\n     \"refId\": \"pariatur officia ullamco id ad\",\n     \"rightId\": \"pariatur non eu\",\n     \"userId\": \"t\",\n     \"createdBy\": \"dolore anim\",\n     \"createdWhen\": \"1976-02-23T15:00:40.950Z\",\n     \"modifiedBy\": \"adipisicing fugiat dolor Excepteur\",\n     \"modifiedWhen\": \"2020-11-03T07:13:29.962Z\"\n    },\n    {\n     \"deleted\": false,\n     \"id\": \"fugiat adipisicing\",\n     \"refId\": \"amet ea\",\n     \"rightId\": \"enim velit proident\",\n     \"userId\": \"dolor nulla anim\",\n     \"createdBy\": \"magna nostrud\",\n     \"createdWhen\": \"1991-04-17T02:53:14.951Z\",\n     \"modifiedBy\": \"incididunt magna nisi dolor\",\n     \"modifiedWhen\": \"1985-11-17T01:06:36.305Z\"\n    }\n   ],\n   \"user\": {\n    \"firstName\": \"proiden\",\n    \"lastName\": \"sint ut occaecat aute\",\n    \"phone\": \"cil\",\n    \"profileImage\": \"eiusmod enim proident\",\n    \"imageUri\": \"dolore commo\"\n   }\n  },\n  {\n   \"id\": \"et Ut laboris\",\n   \"userId\": \"exercitation\",\n   \"boardId\": \"in nisi quis veniam\",\n   \"roleId\": \"Lorem qui\",\n   \"isOwner\": false,\n   \"selected\": true,\n   \"userRight\": [\n    {\n     \"deleted\": true,\n     \"id\": \"elit nisi\",\n     \"refId\": \"do culpa fugiat\",\n     \"rightId\": \"qui incididunt anim\",\n     \"userId\": \"enim dolore anim\",\n     \"createdBy\": \"sunt qui pariatur\",\n     \"createdWhen\": \"2008-03-26T18:39:34.820Z\",\n     \"modifiedBy\": \"voluptate esse\",\n     \"modifiedWhen\": \"1965-01-14T17:03:30.019Z\"\n    },\n    {\n     \"deleted\": false,\n     \"id\": \"consequat non officia reprehenderit\",\n     \"refId\": \"amet velit \",\n     \"rightId\": \"fugiat commodo labore\",\n     \"userId\": \"nulla laboris ut dolor Ut\",\n     \"createdBy\": \"Excepteur consectetur ut enim\",\n     \"createdWhen\": \"1997-09-13T23:24:58.901Z\",\n     \"modifiedBy\": \"et nulla\",\n     \"modifiedWhen\": \"1948-04-24T19:46:50.478Z\"\n    }\n   ],\n   \"user\": {\n    \"firstName\": \"officia consectetur Excepteur\",\n    \"lastName\": \"ut deserunt nostrud eu\",\n    \"phone\": \"incididunt Duis\",\n    \"profileImage\": \"irure aliquip \",\n    \"imageUri\": \"occaecat fugiat ex\"\n   }\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Board Get Action",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var response = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Counting Response keys\", function(){",
											"var responseKeyListCount = Object.keys(response).length;",
											"console.log(\"Response keys count is: \"+ responseKeyListCount);",
											"})",
											"",
											"pm.test(\"Checking keys values not null\", function(){",
											"for(let key of Object.keys(response)) {",
											"    if(key = null){",
											"        console.log(key +\" Value is null\");",
											"    }",
											"}",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{BoardId}}\",\n    \"projectId\": \"{{ProjectId}}\",\n    \"imageUri\": false,\n    \"workItemApproval\": 4,\n    \"earlyWarningEnabled\": false,\n    \"lateWarningEnabled\": false,\n    \"lateWarPercentage\": 60,\n    \"name\": \"voluptate tempor\",\n    \"code\": \"sunt ea laboris\",\n    \"boardColor\": \"esse Ut nisi dolore adipisicing\",\n    \"description\": \"mollit aute\",\n    \"lateWarningHours\": \"consequat minim\",\n    \"earlyWarningHours\": \"cupidatat culpa\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Board/GetAction/Get",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Board",
										"GetAction",
										"Get"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Board/GetAction/Get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Board",
												"GetAction",
												"Get"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"reprehenderit elit ex\",\n  \"projectId\": \"fugiat nulla ut\",\n  \"imageUri\": false,\n  \"workItemApproval\": 1,\n  \"earlyWarningEnabled\": true,\n  \"lateWarningEnabled\": false,\n  \"lateWarPercentage\": 50,\n  \"name\": \"do laboris minim\",\n  \"code\": \"incididunt dolore nulla labore\",\n  \"boardColor\": \"sint \",\n  \"description\": \"dolor\",\n  \"lateWarningHours\": \"magna fugiat\",\n  \"earlyWarningHours\": \"magna commod\",\n  \"boardUsers\": [\n   {\n    \"id\": \"voluptate\",\n    \"userId\": \"esse\",\n    \"boardId\": \"non dolor anim\",\n    \"roleId\": \"dolore do deserunt sint\",\n    \"isOwner\": false,\n    \"selected\": false,\n    \"userRight\": [\n     {\n      \"deleted\": false,\n      \"id\": \"dolore reprehenderit eu qui\",\n      \"refId\": \"velit sunt\",\n      \"rightId\": \"exercitation nulla\",\n      \"userId\": \"labore magna nulla enim\",\n      \"createdBy\": \"est exercitation dolor culpa\",\n      \"createdWhen\": \"1980-03-21T19:49:48.424Z\",\n      \"modifiedBy\": \"dolore anim dolor\",\n      \"modifiedWhen\": \"2020-12-14T10:22:24.293Z\"\n     },\n     {\n      \"deleted\": true,\n      \"id\": \"dolore laboris culpa\",\n      \"refId\": \"consequat deserunt ullamco sunt eu\",\n      \"rightId\": \"et ut\",\n      \"userId\": \"veniam mollit sint ex ess\",\n      \"createdBy\": \"mollit cupidatat culpa\",\n      \"createdWhen\": \"2013-05-27T05:36:57.297Z\",\n      \"modifiedBy\": \"dolor sit consectetur reprehenderit minim\",\n      \"modifiedWhen\": \"2005-01-04T05:37:13.626Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"Lorem \",\n     \"lastName\": \"non dolore ipsum exercitation incididunt\",\n     \"phone\": \"fugiat\",\n     \"profileImage\": \"aute sunt nisi\",\n     \"imageUri\": \"occaecat aliquip\"\n    }\n   },\n   {\n    \"id\": \"laborum ulla\",\n    \"userId\": \"ut proident qui\",\n    \"boardId\": \"ut aliqua amet\",\n    \"roleId\": \"aliquip anim quis aliqua\",\n    \"isOwner\": false,\n    \"selected\": false,\n    \"userRight\": [\n     {\n      \"deleted\": false,\n      \"id\": \"non dolore\",\n      \"refId\": \"eiusmod \",\n      \"rightId\": \"consequat enim\",\n      \"userId\": \"aliqua\",\n      \"createdBy\": \"Ut minim anim\",\n      \"createdWhen\": \"1985-07-26T01:51:35.849Z\",\n      \"modifiedBy\": \"veniam\",\n      \"modifiedWhen\": \"1987-10-07T00:16:13.490Z\"\n     },\n     {\n      \"deleted\": false,\n      \"id\": \"deserunt consequat exercitation\",\n      \"refId\": \"consectetur aliqua aute\",\n      \"rightId\": \"non ut id tempor et\",\n      \"userId\": \"exercitation proident dolore in\",\n      \"createdBy\": \"magna enim reprehenderit cupidatat\",\n      \"createdWhen\": \"1968-10-03T04:33:01.011Z\",\n      \"modifiedBy\": \"ut aliquip Duis ipsum\",\n      \"modifiedWhen\": \"1981-01-20T05:38:42.586Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"mollit elit cupidatat officia tempor\",\n     \"lastName\": \"occaecat amet Lorem\",\n     \"phone\": \"id dolor anim Duis\",\n     \"profileImage\": \"ad non irure ullamco ut\",\n     \"imageUri\": \"pariatur\"\n    }\n   }\n  ]\n },\n {\n  \"id\": \"in nostrud Du\",\n  \"projectId\": \"velit ut amet\",\n  \"imageUri\": true,\n  \"workItemApproval\": 4,\n  \"earlyWarningEnabled\": false,\n  \"lateWarningEnabled\": true,\n  \"lateWarPercentage\": 50,\n  \"name\": \"reprehenderit in cupidatat sint\",\n  \"code\": \"sint\",\n  \"boardColor\": \"ipsum pariatur incididunt\",\n  \"description\": \"velit reprehenderit ipsum nisi\",\n  \"lateWarningHours\": \"minim est\",\n  \"earlyWarningHours\": \"dolor ex eu amet minim\",\n  \"boardUsers\": [\n   {\n    \"id\": \"dolor sunt fugiat\",\n    \"userId\": \"occaecat culpa reprehend\",\n    \"boardId\": \"cillum incididunt\",\n    \"roleId\": \"fugiat ex consequat\",\n    \"isOwner\": false,\n    \"selected\": false,\n    \"userRight\": [\n     {\n      \"deleted\": true,\n      \"id\": \"elit pariatur incididunt sit\",\n      \"refId\": \"labore ipsum esse anim\",\n      \"rightId\": \"laboris aute sint\",\n      \"userId\": \"adipisicing amet pariatur \",\n      \"createdBy\": \"labore eu ad\",\n      \"createdWhen\": \"1971-09-15T18:30:00.250Z\",\n      \"modifiedBy\": \"aute tempor quis cupidatat eiusmod\",\n      \"modifiedWhen\": \"1944-01-22T03:36:47.687Z\"\n     },\n     {\n      \"deleted\": false,\n      \"id\": \"cillum\",\n      \"refId\": \"magna Ut \",\n      \"rightId\": \"Lorem quis nostrud laboris nulla\",\n      \"userId\": \"reprehenderit\",\n      \"createdBy\": \"sed quis ea\",\n      \"createdWhen\": \"1956-11-18T20:34:27.583Z\",\n      \"modifiedBy\": \"ipsum adipisicing pariatur\",\n      \"modifiedWhen\": \"1948-07-31T22:40:03.747Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"anim nulla aliquip\",\n     \"lastName\": \"adipisicing\",\n     \"phone\": \"ad dolor ea in\",\n     \"profileImage\": \"esse nostrud magna\",\n     \"imageUri\": \"cupidatat occaecat nulla commodo\"\n    }\n   },\n   {\n    \"id\": \"et ut officia\",\n    \"userId\": \"mollit nostrud ad aliquip ullamco\",\n    \"boardId\": \"Excepteur proident\",\n    \"roleId\": \"aliquip commodo ex sint\",\n    \"isOwner\": true,\n    \"selected\": true,\n    \"userRight\": [\n     {\n      \"deleted\": true,\n      \"id\": \"ut dolor id\",\n      \"refId\": \"dolor sint in enim magna\",\n      \"rightId\": \"officia irure ex\",\n      \"userId\": \"in ut\",\n      \"createdBy\": \"in fugiat\",\n      \"createdWhen\": \"1977-03-11T00:58:31.594Z\",\n      \"modifiedBy\": \"enim\",\n      \"modifiedWhen\": \"2014-03-30T13:57:43.463Z\"\n     },\n     {\n      \"deleted\": false,\n      \"id\": \"occaecat sunt consectetur\",\n      \"refId\": \"fugiat aliquip nulla quis\",\n      \"rightId\": \"sint est amet dolore dolore\",\n      \"userId\": \"reprehenderit officia\",\n      \"createdBy\": \"in ad magna\",\n      \"createdWhen\": \"2007-09-05T18:54:30.275Z\",\n      \"modifiedBy\": \"commodo est fugiat\",\n      \"modifiedWhen\": \"2003-12-02T02:20:39.586Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"dolor labore velit\",\n     \"lastName\": \"exercitation\",\n     \"phone\": \"velit id\",\n     \"profileImage\": \"Ut enim\",\n     \"imageUri\": \"Excepteur officia consequat\"\n    }\n   }\n  ]\n }\n]"
								}
							]
						},
						{
							"name": "Board Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check the updation procress done on the selected board\", function () {",
											"   let actualData = pm.iterationData.get(\"BoardId\");",
											"   pm.expect(pm.response.json().id.value).to.eql(actualData)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{BoardId}}\",\n    \"projectId\": \"{{ProjectId}}\",\n    \"imageUri\": true,\n    \"workItemApproval\": 4,\n    \"earlyWarningEnabled\": false,\n    \"lateWarningEnabled\": false,\n    \"lateWarPercentage\": 60,\n    \"name\": \"voluptate tempor\",\n    \"code\": \"sunt ea laboris\",\n    \"boardColor\": \"esse Ut nisi dolore adipisicing\",\n    \"description\": \"mollit aute\",\n    \"lateWarningHours\": \"consequat minim\",\n    \"earlyWarningHours\": \"cupidatat culpa\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Board/Update/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Board",
										"Update",
										"Update"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Board/Update/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Board",
												"Update",
												"Update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"ut labore Excepteur eiusmod\",\n \"projectId\": \"nulla anim ipsum sed\",\n \"imageUri\": true,\n \"workItemApproval\": 2,\n \"earlyWarningEnabled\": true,\n \"lateWarningEnabled\": false,\n \"lateWarPercentage\": 0,\n \"name\": \"e\",\n \"code\": \"amet ea\",\n \"boardColor\": \"incididunt nostrud qui\",\n \"description\": \"deserunt adipisicing\",\n \"lateWarningHours\": \"dolore\",\n \"earlyWarningHours\": \"quis sint\",\n \"boardUsers\": [\n  {\n   \"id\": \"sint aliqua cul\",\n   \"userId\": \"Lorem nulla\",\n   \"boardId\": \"labore exercitation reprehenderit ipsum\",\n   \"roleId\": \"incididunt velit cillum in\",\n   \"isOwner\": true,\n   \"selected\": true,\n   \"userRight\": [\n    {\n     \"deleted\": true,\n     \"id\": \"consequat tempor Excepteur cupidatat Lorem\",\n     \"refId\": \"sunt officia sit ex veniam\",\n     \"rightId\": \"qui in dolore\",\n     \"userId\": \"ullamco commodo nostrud\",\n     \"createdBy\": \"incididunt veniam consequat enim\",\n     \"createdWhen\": \"1961-03-19T17:55:07.283Z\",\n     \"modifiedBy\": \"ex qui ea\",\n     \"modifiedWhen\": \"1981-02-08T06:12:45.397Z\"\n    },\n    {\n     \"deleted\": false,\n     \"id\": \"pari\",\n     \"refId\": \"veniam nostrud\",\n     \"rightId\": \"mollit non velit\",\n     \"userId\": \"magna anim consectetur non\",\n     \"createdBy\": \"ex elit\",\n     \"createdWhen\": \"1953-05-17T09:34:24.512Z\",\n     \"modifiedBy\": \"voluptate sed ex\",\n     \"modifiedWhen\": \"1978-06-22T18:23:29.826Z\"\n    }\n   ],\n   \"user\": {\n    \"firstName\": \"nisi voluptate velit qui\",\n    \"lastName\": \"in non\",\n    \"phone\": \"nisi eu\",\n    \"profileImage\": \"ut exercitation est do\",\n    \"imageUri\": \"commodo ipsum fugiat amet\"\n   }\n  },\n  {\n   \"id\": \"dolore laboris officia sunt\",\n   \"userId\": \"non Lorem commodo nostrud\",\n   \"boardId\": \"incididunt officia Ut\",\n   \"roleId\": \"adipisicing occaecat nulla ex\",\n   \"isOwner\": true,\n   \"selected\": true,\n   \"userRight\": [\n    {\n     \"deleted\": true,\n     \"id\": \"do consequat aliqua i\",\n     \"refId\": \"aliqua Duis labore \",\n     \"rightId\": \"voluptate\",\n     \"userId\": \"laborum do in dolore\",\n     \"createdBy\": \"Lorem incididunt cupidatat\",\n     \"createdWhen\": \"1945-03-29T06:36:14.599Z\",\n     \"modifiedBy\": \"eiusmod non eu\",\n     \"modifiedWhen\": \"1976-07-10T14:54:21.530Z\"\n    },\n    {\n     \"deleted\": false,\n     \"id\": \"officia magna\",\n     \"refId\": \"occaecat fugiat\",\n     \"rightId\": \"sunt amet exercitation\",\n     \"userId\": \"aliqua in\",\n     \"createdBy\": \"id dolor culpa\",\n     \"createdWhen\": \"1991-03-11T18:19:26.509Z\",\n     \"modifiedBy\": \"sunt magna pariatur\",\n     \"modifiedWhen\": \"2013-05-04T09:51:27.522Z\"\n    }\n   ],\n   \"user\": {\n    \"firstName\": \"eu ullamco\",\n    \"lastName\": \"reprehenderit do elit nostrud\",\n    \"phone\": \"ea\",\n    \"profileImage\": \"minim dese\",\n    \"imageUri\": \"nulla eiusmod ad exercitation\"\n   }\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Board Get Board List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Count the board under the project\", function () {",
											"    let response= pm.response.json();",
											"    let boards;",
											"    for(boards=0; boards<response.length; boards++){",
											"        if(response[boards].id !=null){",
											"            console.log(\"Board [\" +boards+\"] id is: \" + response[boards].id)",
											"        }",
											"    }",
											"    console.log(\"Number of boards at the project level is:  \"+ boards);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "projectId",
										"value": "{{ProjectId}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Board/GetBoardList/GetBoardList?projectId={{ProjectId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Board",
										"GetBoardList",
										"GetBoardList"
									],
									"query": [
										{
											"key": "projectId",
											"value": "{{ProjectId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Board/GetBoardList/GetBoardList?projectId=reprehenderit sunt incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Board",
												"GetBoardList",
												"GetBoardList"
											],
											"query": [
												{
													"key": "projectId",
													"value": "reprehenderit sunt incididunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"reprehenderit elit ex\",\n  \"projectId\": \"fugiat nulla ut\",\n  \"imageUri\": false,\n  \"workItemApproval\": 1,\n  \"earlyWarningEnabled\": true,\n  \"lateWarningEnabled\": false,\n  \"lateWarPercentage\": 50,\n  \"name\": \"do laboris minim\",\n  \"code\": \"incididunt dolore nulla labore\",\n  \"boardColor\": \"sint \",\n  \"description\": \"dolor\",\n  \"lateWarningHours\": \"magna fugiat\",\n  \"earlyWarningHours\": \"magna commod\",\n  \"boardUsers\": [\n   {\n    \"id\": \"voluptate\",\n    \"userId\": \"esse\",\n    \"boardId\": \"non dolor anim\",\n    \"roleId\": \"dolore do deserunt sint\",\n    \"isOwner\": false,\n    \"selected\": false,\n    \"userRight\": [\n     {\n      \"deleted\": false,\n      \"id\": \"dolore reprehenderit eu qui\",\n      \"refId\": \"velit sunt\",\n      \"rightId\": \"exercitation nulla\",\n      \"userId\": \"labore magna nulla enim\",\n      \"createdBy\": \"est exercitation dolor culpa\",\n      \"createdWhen\": \"1980-03-21T19:49:48.424Z\",\n      \"modifiedBy\": \"dolore anim dolor\",\n      \"modifiedWhen\": \"2020-12-14T10:22:24.293Z\"\n     },\n     {\n      \"deleted\": true,\n      \"id\": \"dolore laboris culpa\",\n      \"refId\": \"consequat deserunt ullamco sunt eu\",\n      \"rightId\": \"et ut\",\n      \"userId\": \"veniam mollit sint ex ess\",\n      \"createdBy\": \"mollit cupidatat culpa\",\n      \"createdWhen\": \"2013-05-27T05:36:57.297Z\",\n      \"modifiedBy\": \"dolor sit consectetur reprehenderit minim\",\n      \"modifiedWhen\": \"2005-01-04T05:37:13.626Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"Lorem \",\n     \"lastName\": \"non dolore ipsum exercitation incididunt\",\n     \"phone\": \"fugiat\",\n     \"profileImage\": \"aute sunt nisi\",\n     \"imageUri\": \"occaecat aliquip\"\n    }\n   },\n   {\n    \"id\": \"laborum ulla\",\n    \"userId\": \"ut proident qui\",\n    \"boardId\": \"ut aliqua amet\",\n    \"roleId\": \"aliquip anim quis aliqua\",\n    \"isOwner\": false,\n    \"selected\": false,\n    \"userRight\": [\n     {\n      \"deleted\": false,\n      \"id\": \"non dolore\",\n      \"refId\": \"eiusmod \",\n      \"rightId\": \"consequat enim\",\n      \"userId\": \"aliqua\",\n      \"createdBy\": \"Ut minim anim\",\n      \"createdWhen\": \"1985-07-26T01:51:35.849Z\",\n      \"modifiedBy\": \"veniam\",\n      \"modifiedWhen\": \"1987-10-07T00:16:13.490Z\"\n     },\n     {\n      \"deleted\": false,\n      \"id\": \"deserunt consequat exercitation\",\n      \"refId\": \"consectetur aliqua aute\",\n      \"rightId\": \"non ut id tempor et\",\n      \"userId\": \"exercitation proident dolore in\",\n      \"createdBy\": \"magna enim reprehenderit cupidatat\",\n      \"createdWhen\": \"1968-10-03T04:33:01.011Z\",\n      \"modifiedBy\": \"ut aliquip Duis ipsum\",\n      \"modifiedWhen\": \"1981-01-20T05:38:42.586Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"mollit elit cupidatat officia tempor\",\n     \"lastName\": \"occaecat amet Lorem\",\n     \"phone\": \"id dolor anim Duis\",\n     \"profileImage\": \"ad non irure ullamco ut\",\n     \"imageUri\": \"pariatur\"\n    }\n   }\n  ]\n },\n {\n  \"id\": \"in nostrud Du\",\n  \"projectId\": \"velit ut amet\",\n  \"imageUri\": true,\n  \"workItemApproval\": 4,\n  \"earlyWarningEnabled\": false,\n  \"lateWarningEnabled\": true,\n  \"lateWarPercentage\": 50,\n  \"name\": \"reprehenderit in cupidatat sint\",\n  \"code\": \"sint\",\n  \"boardColor\": \"ipsum pariatur incididunt\",\n  \"description\": \"velit reprehenderit ipsum nisi\",\n  \"lateWarningHours\": \"minim est\",\n  \"earlyWarningHours\": \"dolor ex eu amet minim\",\n  \"boardUsers\": [\n   {\n    \"id\": \"dolor sunt fugiat\",\n    \"userId\": \"occaecat culpa reprehend\",\n    \"boardId\": \"cillum incididunt\",\n    \"roleId\": \"fugiat ex consequat\",\n    \"isOwner\": false,\n    \"selected\": false,\n    \"userRight\": [\n     {\n      \"deleted\": true,\n      \"id\": \"elit pariatur incididunt sit\",\n      \"refId\": \"labore ipsum esse anim\",\n      \"rightId\": \"laboris aute sint\",\n      \"userId\": \"adipisicing amet pariatur \",\n      \"createdBy\": \"labore eu ad\",\n      \"createdWhen\": \"1971-09-15T18:30:00.250Z\",\n      \"modifiedBy\": \"aute tempor quis cupidatat eiusmod\",\n      \"modifiedWhen\": \"1944-01-22T03:36:47.687Z\"\n     },\n     {\n      \"deleted\": false,\n      \"id\": \"cillum\",\n      \"refId\": \"magna Ut \",\n      \"rightId\": \"Lorem quis nostrud laboris nulla\",\n      \"userId\": \"reprehenderit\",\n      \"createdBy\": \"sed quis ea\",\n      \"createdWhen\": \"1956-11-18T20:34:27.583Z\",\n      \"modifiedBy\": \"ipsum adipisicing pariatur\",\n      \"modifiedWhen\": \"1948-07-31T22:40:03.747Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"anim nulla aliquip\",\n     \"lastName\": \"adipisicing\",\n     \"phone\": \"ad dolor ea in\",\n     \"profileImage\": \"esse nostrud magna\",\n     \"imageUri\": \"cupidatat occaecat nulla commodo\"\n    }\n   },\n   {\n    \"id\": \"et ut officia\",\n    \"userId\": \"mollit nostrud ad aliquip ullamco\",\n    \"boardId\": \"Excepteur proident\",\n    \"roleId\": \"aliquip commodo ex sint\",\n    \"isOwner\": true,\n    \"selected\": true,\n    \"userRight\": [\n     {\n      \"deleted\": true,\n      \"id\": \"ut dolor id\",\n      \"refId\": \"dolor sint in enim magna\",\n      \"rightId\": \"officia irure ex\",\n      \"userId\": \"in ut\",\n      \"createdBy\": \"in fugiat\",\n      \"createdWhen\": \"1977-03-11T00:58:31.594Z\",\n      \"modifiedBy\": \"enim\",\n      \"modifiedWhen\": \"2014-03-30T13:57:43.463Z\"\n     },\n     {\n      \"deleted\": false,\n      \"id\": \"occaecat sunt consectetur\",\n      \"refId\": \"fugiat aliquip nulla quis\",\n      \"rightId\": \"sint est amet dolore dolore\",\n      \"userId\": \"reprehenderit officia\",\n      \"createdBy\": \"in ad magna\",\n      \"createdWhen\": \"2007-09-05T18:54:30.275Z\",\n      \"modifiedBy\": \"commodo est fugiat\",\n      \"modifiedWhen\": \"2003-12-02T02:20:39.586Z\"\n     }\n    ],\n    \"user\": {\n     \"firstName\": \"dolor labore velit\",\n     \"lastName\": \"exercitation\",\n     \"phone\": \"velit id\",\n     \"profileImage\": \"Ut enim\",\n     \"imageUri\": \"Excepteur officia consequat\"\n    }\n   }\n  ]\n }\n]"
								}
							]
						},
						{
							"name": "Board Update Board Selection",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Checking updated board id is matching the board\", function () {",
											"    let actualData=pm.iterationData.get(\"BoardId\") ;",
											"    pm.expect(pm.response.json().boardId.value).to.eql(actualData);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"boardId\": [\n        \"{{BoardId}}\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Board/UpdateBoardSelection/UpdateBoardSelection?BoardId={{BoardId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Board",
										"UpdateBoardSelection",
										"UpdateBoardSelection"
									],
									"query": [
										{
											"key": "BoardId",
											"value": "{{BoardId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"boardId\": [\n        \"in\",\n        \"deserunt eu proident elit\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Board/UpdateBoardSelection/UpdateBoardSelection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Board",
												"UpdateBoardSelection",
												"UpdateBoardSelection"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"boardId\": [\n  \"in\",\n  \"deserunt eu proident elit\"\n ]\n}"
								}
							]
						},
						{
							"name": "Board User Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json();",
											"pm.globals.set(\"BoardUserId\", response.id);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"check for borad user created successfully\", function(){",
											"    let boarduserId = response.id;",
											"    if(boarduserId != null){",
											"        console.log(\"Board user added successfully\")",
											"    }",
											"})",
											"",
											"pm.test(\"Counting Response keys\", function(){",
											"var responseKeyListCount = Object.keys(response).length;",
											"console.log(\"Response keys count is: \"+ responseKeyListCount);",
											"})",
											"",
											"pm.test(\"Check the user added in the selected board\", function () {",
											"    let actualData=pm.iterationData.get(\"BoardId\") ;",
											"    pm.expect(response.boardId.value).to.eql(actualData);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{AccountUserId}}\",\n    \"userId\": \"{{ProjectUserId}}\",\n    \"boardId\": \"{{BoardId}}\",\n    \"roleId\": \"{{BoardOwnerRoleId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/BoardUser/Create/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"BoardUser",
										"Create",
										"Create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/BoardUser/Create/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"BoardUser",
												"Create",
												"Create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"esse cupidatat\",\n \"userId\": \"nostrud qui eiusmod\",\n \"boardId\": \"est irure Duis anim\",\n \"roleId\": \"dolor Excepteur ut fugiat laboris\",\n \"isOwner\": false,\n \"selected\": false,\n \"userRight\": [\n  {\n   \"deleted\": false,\n   \"id\": \"ex consequa\",\n   \"refId\": \"Lorem\",\n   \"rightId\": \"enim nulla aute\",\n   \"userId\": \"proident in aute aliqua\",\n   \"createdBy\": \"mollit eiusmod tempor\",\n   \"createdWhen\": \"1993-01-28T00:43:49.871Z\",\n   \"modifiedBy\": \"lab\",\n   \"modifiedWhen\": \"1987-03-06T08:23:28.618Z\"\n  },\n  {\n   \"deleted\": true,\n   \"id\": \"exercitation\",\n   \"refId\": \"e\",\n   \"rightId\": \"elit ad \",\n   \"userId\": \"consequat reprehenderit deserunt\",\n   \"createdBy\": \"in adipisicing ipsum sed mollit\",\n   \"createdWhen\": \"1956-06-25T18:28:07.915Z\",\n   \"modifiedBy\": \"irure fugiat tempor ut\",\n   \"modifiedWhen\": \"1991-10-02T21:46:50.177Z\"\n  }\n ],\n \"user\": {\n  \"firstName\": \"Ut et velit\",\n  \"lastName\": \"fugiat\",\n  \"phone\": \"qui in ad Duis pariatur\",\n  \"profileImage\": \"quis mollit des\",\n  \"imageUri\": \"cupidatat fugiat\"\n }\n}"
								}
							]
						},
						{
							"name": "Board User Right Get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/BoardUserRight/Get/Ping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"BoardUserRight",
										"Get",
										"Ping"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/BoardUserRight/Get/Ping",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"BoardUserRight",
												"Get",
												"Ping"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "reprehenderit sunt incididunt"
								}
							]
						},
						{
							"name": "Board User Right Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json()",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check the user right id added to the selected user\", function () {",
											"    ",
											"    let actualData=pm.iterationData.get(\"BoardUserId\") ;",
											"    pm.expect(response.boardUserId.value).to.eql(actualData);",
											"});",
											"",
											"pm.test(\"Check Board User Right not null\", function(){",
											"    if(response.id !=null){",
											"    pm.globals.set(\"BoardUserRightId\", response.id) ",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{AccountUserId}}\",\n    \"boardUserId\": \"{{BoardUserId}}\",\n    \"rightId\": \"{{AddBoardMemberRightIdDB}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/BoardUserRight/Create/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"BoardUserRight",
										"Create",
										"Create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/BoardUserRight/Create/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"BoardUserRight",
												"Create",
												"Create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"tempor do consectetur minim\",\n \"boardUserId\": \"elit\",\n \"rightId\": \"laboris reprehenderit\"\n}"
								}
							]
						},
						{
							"name": "Board User Right Get Action",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response = pm.response.json()",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Count the users rights in the selected board\", function () {",
											"    let response= pm.response.json();",
											"    let usersRights;",
											"    for(usersRights=0; usersRights<response.length; usersRights++){",
											"        if(response[usersRights].id !=null){",
											"            console.log(\"User Right [\" +usersRights+\"] id is: \" + response[usersRights].id)",
											"        }",
											"    }",
											"    console.log(\"Number of users Right id at the board level is:  \"+ usersRights);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{AccountUserId}}\",\n    \"boardUserId\": \"{{BoardUserId}}\",\n    \"rightId\": \"{{AccountUserRightId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/BoardUserRight/GetAction/Get",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"BoardUserRight",
										"GetAction",
										"Get"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/BoardUserRight/GetAction/Get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"BoardUserRight",
												"GetAction",
												"Get"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"sed amet qui aliquip ipsum\",\n  \"boardUserId\": \"eu elit\",\n  \"rightId\": \"tempor pariatur sed do cillum\"\n },\n {\n  \"id\": \"ea do\",\n  \"boardUserId\": \"ex veniam\",\n  \"rightId\": \"eiusmod pariatur ullamco\"\n }\n]"
								}
							]
						},
						{
							"name": "Board User Right Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"if(pm.response.json().id){",
											"    pm.test(\"Check the board user updated successfully\", function () {",
											"});",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{BoardUserRightId}}\",\n    \"boardUserId\": \"{{BoardUserId}}\",\n    \"rightId\": \"{{CreateActivityRightIdDB}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/BoardUserRight/Update/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"BoardUserRight",
										"Update",
										"Update"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/BoardUserRight/Update/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"BoardUserRight",
												"Update",
												"Update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"tempor do consectetur minim\",\n \"boardUserId\": \"elit\",\n \"rightId\": \"laboris reprehenderit\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Location",
					"item": [
						{
							"name": "AddBoundary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check the drawn polygon is added as Site Boundary\", ()=>{",
											"let actualData = pm.response.json().type;",
											"if(pm.expect(actualData).to.be.eql(0)){",
											"console.log(\"Drawn polygon is added as Site Boundary\")",
											"}",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\"parentId\":  \"251fbd2d-6a89-461c-b841-575ba72fb07c\",\n\"projectId\": \"{{ProjectId}}\",\n  \"geoJson\": {\n\"type\": \"FeatureCollection\",\n\"features\": [\n{\n\"type\": \"Feature\",\n\"properties\": {},\n\"geometry\": {\n\"type\": \"Polygon\",\n\"coordinates\": [\n[\n[\n40.42968749999999,\n46.800059446787316\n],\n[\n61.17187499999999,\n46.800059446787316\n],\n[\n61.17187499999999,\n55.178867663281984\n],\n[\n40.42968749999999,\n55.178867663281984\n],\n[\n40.42968749999999,\n46.800059446787316\n]\n]\n]\n}\n}\n]\n}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Location/addBoundry",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Location",
										"addBoundry"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"type\": 0,\n    \"parentId\": \"veniam in non dolor incididunt\",\n    \"projectId\": \"commodo\",\n    \"geoJson\": {\n        \"type\": \"qui sunt\",\n        \"features\": [\n            {\n                \"type\": \"\",\n                \"properties\": {\n                    \"rootElement\": {}\n                },\n                \"geometry\": {\n                    \"type\": \"amet ea ullamco dolore\",\n                    \"coordinates\": [\n                        [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    ]\n                }\n            },\n            {\n                \"type\": \"reprehenderit tempor\",\n                \"properties\": {\n                    \"rootElement\": {}\n                },\n                \"geometry\": {\n                    \"type\": \"dolore Ut\",\n                    \"coordinates\": [\n                        [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ],\n                        [\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            },\n                            {\n                                \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n                            }\n                        ]\n                    ]\n                }\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Location/addProjectBoundry",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Location",
												"addProjectBoundry"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"type\": 0,\n \"parentId\": \"veniam in non dolor incididunt\",\n \"projectId\": \"commodo\",\n \"geoJson\": {\n  \"type\": \"qui sunt\",\n  \"features\": [\n   {\n    \"type\": \"\",\n    \"properties\": {\n     \"rootElement\": {}\n    },\n    \"geometry\": {\n     \"type\": \"amet ea ullamco dolore\",\n     \"coordinates\": [\n      [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     ]\n    }\n   },\n   {\n    \"type\": \"reprehenderit tempor\",\n    \"properties\": {\n     \"rootElement\": {}\n    },\n    \"geometry\": {\n     \"type\": \"dolore Ut\",\n     \"coordinates\": [\n      [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ],\n      [\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       },\n       {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n       }\n      ]\n     ]\n    }\n   }\n  ]\n }\n}"
								}
							]
						},
						{
							"name": "Get Boundary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response= pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check the Site Boundary is showing from the selected project\", ()=>{",
											"let actualData = response.projectId;",
											"let expectedData = pm.iterationData.get(\"0ba873a1-0538-4ae6-b777-68b246497dc8\")",
											"if(pm.expect(actualData).to.be.eql(expectedData)){",
											"console.log(\"Selected project showing\");",
											"  }",
											"})",
											"",
											"pm.test(\"Check the Site Boundary is showing from the selected project\", function(){",
											"    let objectDataNum =0; ",
											"   if(pm.expect(response[objectDataNum].type).to.eql(0)){",
											"        console.log(\"Object of \"+objectDataNum+ \" Site Boundary showing successfully\")",
											"        objectDataNum++",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "projectId",
										"value": "{{ProjectId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Location/getBoundry?projectId={{ProjectId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Location",
										"getBoundry"
									],
									"query": [
										{
											"key": "projectId",
											"value": "{{ProjectId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Boundary",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check the Site Boundary updated with new polygon\", ()=>{",
											"let actualData = pm.response.json().type;",
											"if(pm.expect(pm.response.json().type).to.be.eql(0)){",
											"console.log(\"Updated the siteboundary\")",
											"}",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"parentId\": \"00000000-0000-0000-0000-000000000000\",\n  \"Id\":\"9bc47e5f-54fe-4a15-a338-cc30c4df81b8\",\n  \"projectId\": \"{{ProjectId}}\",\n  \"geoJson\": {\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {},\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [\n              -45.3515625,\n              75.23066741281573\n            ],\n            [\n              -38.3203125,\n              76.9206135182968\n            ],\n            [\n              -33.75,\n              79.03843742487174\n            ],\n            [\n              -50.625,\n              79.36770077764092\n            ],\n            [\n              -45.3515625,\n              75.23066741281573\n            ]\n          ]\n        ]\n      }\n    }\n  ]\n}\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Location/updateBoundary",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Location",
										"updateBoundary"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Site Area",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check the drawn polygon is added as Site Area\", ()=>{",
											"let actualData = pm.response.json().type;",
											"if(pm.expect(actualData).to.be.eql(1)){",
											"console.log(\"Drawn polygon is added as Site Area\")",
											"}",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": \"{{ProjectId}}\",\n  \"geoJson\": {\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {},\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [\n              -53.78906249999999,\n              77.76758238272801\n            ],\n            [\n              -49.21875,\n              77.46602847687329\n            ],\n            [\n              -34.1015625,\n              76.9999351181161\n            ],\n            [\n              -43.59375,\n              80.4157074446218\n            ],\n            [\n              -53.78906249999999,\n              77.76758238272801\n            ]\n          ]\n        ]\n      }\n    }\n  ]\n}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Location/addSiteArea",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Location",
										"addSiteArea"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Site Area",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response= pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check the Site Area is showing from the selected project\", ()=>{",
											"let actualData = response.projectId;",
											"let expectedData = pm.iterationData.get(\"0ba873a1-0538-4ae6-b777-68b246497dc8\")",
											"if(pm.expect(actualData).to.be.eql(expectedData)){",
											"console.log(\"Selected project showing\");",
											"  }",
											"})",
											"",
											"pm.test(\"Check the Site Area is showing from the selected project\", ()=>{",
											" let objectDataNum =0; ",
											"   if(pm.expect(response[objectDataNum].type).to.eql(1)){",
											"        console.log(\"Object of \"+objectDataNum+ \" Site Area showing successfully\")",
											"        objectDataNum++",
											"    }",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Location/getSiteArea?projectId={{ProjectId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Location",
										"getSiteArea"
									],
									"query": [
										{
											"key": "projectId",
											"value": "{{ProjectId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Site Area",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check the Site Area updated with new polygon\", ()=>{",
											"let actualData = pm.response.json().type;",
											"if(pm.expect(pm.response.json().type).to.be.eql(1)){",
											"console.log(\"Updated the Site Area\")",
											"}",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"id\": \"9bc47e5f-54fe-4a15-a338-cc30c4df81b8\", // Take from DB\n  \"projectId\": \"{{ProjectId}}\",\n  \"geoJson\": {\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {},\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [\n              -53.78906249999999,\n              77.76758238272801\n            ],\n            [\n              -49.21875,\n              77.46602847687329\n            ],\n            [\n              -34.1015625,\n              76.9999351181161\n            ],\n            [\n              -43.59375,\n              80.4157074446218\n            ],\n            [\n              -53.78906249999999,\n              77.76758238272801\n            ]\n          ]\n        ]\n      }\n    }\n  ]\n}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Location/updateSiteArea",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Location",
										"updateSiteArea"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Building",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check the drawn polygon is added as Building\", ()=>{",
											"let actualData = pm.response.json().type;",
											"if(pm.expect(actualData).to.be.eql(2)){",
											"console.log(\"Drawn polygon is added as Building\")",
											"}",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": \"{{ProjectId}}\",\n  \"geoJson\": {\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {},\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [\n              -54.140625,\n              76.18499546094715\n            ],\n            [\n              -37.265625,\n              75.84516854027044\n            ],\n            [\n              -30.585937499999996,\n              77.69287033641928\n            ],\n            [\n              -47.8125,\n              80.76061470752451\n            ],\n            [\n              -54.140625,\n              76.18499546094715\n            ]\n          ]\n        ]\n      }\n    }\n  ]\n}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Location/addBuilding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Location",
										"addBuilding"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Buildings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let response= pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check the Buildings are showing from the selected project\", ()=>{",
											"let actualData = response.projectId;",
											"let expectedData = pm.iterationData.get(\"0ba873a1-0538-4ae6-b777-68b246497dc8\")",
											"if(pm.expect(actualData).to.be.eql(expectedData)){",
											"console.log(\"Selected project showing\");",
											"  }",
											"})",
											"",
											"pm.test(\"Check the buildings are showing from the selected project\", ()=>{",
											" let objectDataNum =0; ",
											"   if(pm.expect(response[objectDataNum].type).to.eql(2)){",
											"        console.log(\"Object of \"+objectDataNum+ \" Buildings showing successfully\")",
											"        objectDataNum++",
											"    }",
											"})",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Location/getBuildings?projectId={{ProjectId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Location",
										"getBuildings"
									],
									"query": [
										{
											"key": "projectId",
											"value": "{{ProjectId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Building",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check the Site Boundary updated with new polygon\", ()=>{",
											"let actualData = pm.response.json().type;",
											"if((actualData).to.be.eql(2)){",
											"console.log(\"Updated the siteboundary\")",
											"}",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n \"id\": \"cc9c90b6-4d9d-4e1c-ad07-2451baba42d7\", //Take Id from DB\n  \"projectId\": \"{{ProjectId}}\",\n  \"geoJson\":  {\n\"type\": \"FeatureCollection\",\n\"features\": [\n{\n\"type\": \"Feature\",\n\"properties\": {},\n\"geometry\": {\n\"type\": \"Polygon\",\n\"coordinates\": [\n[\n[\n74.33961153030396,\n31.49336526823938\n],\n[\n74.33986902236938,\n31.49336526823938\n],\n[\n74.33986902236938,\n31.496493997983965\n],\n[\n74.33961153030396,\n31.496493997983965\n],\n[\n74.33961153030396,\n31.49336526823938\n]\n]\n]\n}\n}\n]\n}\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Location/updateBuilding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Location",
										"updateBuilding"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User and UserAddress(pending)",
					"item": [
						{
							"name": "Right and Role(pending)",
							"item": []
						},
						{
							"name": "Users Search By Name Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 10,\n    \"sortDirection\":1,\n    \"keySearch\": \"abcd@gmail.com\"\n    \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Users/SearchByName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"SearchByName"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"pageNumber\": -93899318,\n    \"pageSize\": 96349840,\n    \"sortDirection\": 61374443,\n    \"keySearch\": \"cupidatat in\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Users/SearchByName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"SearchByName"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"irure \",\n  \"name\": \"deserunt tempor dolor dolore velit\",\n  \"userName\": \"labore \",\n  \"imageUri\": \"fugiat Duis commodo mollit\"\n },\n {\n  \"id\": \"eu aute commodo anim ut\",\n  \"name\": \"ut\",\n  \"userName\": \"dolor cillum\",\n  \"imageUri\": \"proident ipsum veniam eu\"\n }\n]"
								}
							]
						},
						{
							"name": "Users Create User Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"User Created Successfully\",()=>{\r",
											"    const response=pm.response.json();\r",
											"    pm.expect(response.statusCode).is.to.be.eql(200);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"gender\": 1,\n    \"phone\": \"090078601\",\n    \"firstName\": \"Teeli\",\n    \"lastName\": \"Fun\",\n    \"jobTitle\": \"Call Center\",\n    \"email\": \"telli12332@abcgmail.com\",\n    \"password\": \"ZeeshanK124@\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Users/CreateUser",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"CreateUser"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Users/CreateUser",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Users",
												"CreateUser"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "reprehenderit sunt incididunt"
								}
							]
						}
					]
				},
				{
					"name": "Contractor",
					"item": [
						{
							"name": "Contractor Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    \r",
											"});\r",
											"pm.test(\"Contractor created\", ()=>{\r",
											"    const response=pm.response.json();\r",
											"    pm.expect(response.name).is.not.null;\r",
											"    pm.globals.set(\"contractorId\",response.id)\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"targetId\": \"26ebadc8-802f-4c96-807a-5d875ab98ead\",\n    \"vatId\": \"26ebadc8-802f-4c96-807a-5d875ab98ead\",\n    \"name\": \"RaguPatti\",\n    \"phone\": \"ex dolore\",\n    \"logo\": \"nisi nulla\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Contractor/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Contractor",
										"Create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"targetId\": \"in veniam dolor magna\",\n    \"vatId\": \"ipsum eiusmod pariatur\",\n    \"name\": \"voluptate dolor labore velit\",\n    \"phone\": \"ex dolore\",\n    \"logo\": \"nisi nulla\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Contractor/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Contractor",
												"Create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"switchCompany\": true,\n \"vatId\": \"occaecat ut do\",\n \"isActive\": true,\n \"parentAccountId\": \"magna pariatur velit\",\n \"targetId\": \"non\",\n \"boards\": -23607609,\n \"users\": 98753370,\n \"code\": \"voluptate amet aliquip nostrud dolore\",\n \"name\": \"tempor Duis deserunt\",\n \"phone\": \"adipisicing eiusmod\",\n \"logo\": \"nostrud amet sint quis consectetur\",\n \"street\": \"Duis esse do magna cu\",\n \"city\": \"ut\",\n \"state\": \"ad adipisicing i\",\n \"zip\": \"ullamco\",\n \"countryCode\": \"mollit laboris consequat eiusmod\",\n \"companySize\": \"eiusmod pariatur\",\n \"regNumber\": \"consequat nulla consectetur aliqua\",\n \"companyNumber\": \"sint ut ex Lorem velit\",\n \"description\": \"pariatur Ut fugiat\",\n \"url\": \"ea elit dolore exercitation qui\"\n}"
								}
							]
						},
						{
							"name": "Contractor Get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"pm.test(\"Returning Data\",()=>{\r",
											"    pm.expect(response).is.not.null;\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Contractor/GetContractorById?Id={{contractorId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Contractor",
										"GetContractorById"
									],
									"query": [
										{
											"key": "Id",
											"value": "{{contractorId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Contractor/GetContractorById?Id=reprehenderit sunt incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Contractor",
												"GetContractorById"
											],
											"query": [
												{
													"key": "Id",
													"value": "reprehenderit sunt incididunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"switchCompany\": true,\n \"vatId\": \"occaecat ut do\",\n \"isActive\": true,\n \"parentAccountId\": \"magna pariatur velit\",\n \"targetId\": \"non\",\n \"boards\": -23607609,\n \"users\": 98753370,\n \"code\": \"voluptate amet aliquip nostrud dolore\",\n \"name\": \"tempor Duis deserunt\",\n \"phone\": \"adipisicing eiusmod\",\n \"logo\": \"nostrud amet sint quis consectetur\",\n \"street\": \"Duis esse do magna cu\",\n \"city\": \"ut\",\n \"state\": \"ad adipisicing i\",\n \"zip\": \"ullamco\",\n \"countryCode\": \"mollit laboris consequat eiusmod\",\n \"companySize\": \"eiusmod pariatur\",\n \"regNumber\": \"consequat nulla consectetur aliqua\",\n \"companyNumber\": \"sint ut ex Lorem velit\",\n \"description\": \"pariatur Ut fugiat\",\n \"url\": \"ea elit dolore exercitation qui\"\n}"
								}
							]
						},
						{
							"name": "Contractor Get Contractor List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"});\r",
											"pm.test(\"Returning list\",()=>{\r",
											"\r",
											"    const response=pm.response.json();\r",
											"    var length=response.data.length;\r",
											"    console.log(length);\r",
											"    pm.expect(response.data).is.not.eql(null);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageNumber\": 1,\n    \"pageSize\": 10,\n    \"sortDirection\":0,\n    \"keySearch\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Contractor/GetContractorList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Contractor",
										"GetContractorList"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Contractor/GetContractorList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Contractor",
												"GetContractorList"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"switchCompany\": false,\n  \"vatId\": \"deserunt cillum aliqua\",\n  \"isActive\": true,\n  \"parentAccountId\": \"sed cillum Lorem\",\n  \"targetId\": \"voluptate \",\n  \"boards\": -54912107,\n  \"users\": 37238608,\n  \"code\": \"enim laboris\",\n  \"name\": \"velit qui\",\n  \"phone\": \"minim aute enim ad Ut\",\n  \"logo\": \"non dolor voluptate Excepteur\",\n  \"street\": \"voluptate proident officia incididunt occ\",\n  \"city\": \"sed laboris sint labore\",\n  \"state\": \"ipsum incididunt proident magna\",\n  \"zip\": \"pariatur ex nisi incididunt consequat\",\n  \"countryCode\": \"aliqua labore\",\n  \"companySize\": \"occaecat tempor\",\n  \"regNumber\": \"cillum reprehenderit ipsum elit id\",\n  \"companyNumber\": \"tempor cu\",\n  \"description\": \"adipisicing in labore aute\",\n  \"url\": \"in elit esse veniam\"\n },\n {\n  \"switchCompany\": false,\n  \"vatId\": \"ullamco exercitation Duis Excepteur\",\n  \"isActive\": false,\n  \"parentAccountId\": \"eu Ut\",\n  \"targetId\": \"minim aliqua officia\",\n  \"boards\": -23440911,\n  \"users\": 55787125,\n  \"code\": \"ut anim consectetur\",\n  \"name\": \"occaecat elit incididunt\",\n  \"phone\": \"mollit amet quis magna\",\n  \"logo\": \"c\",\n  \"street\": \"amet occaecat in\",\n  \"city\": \"aliquip\",\n  \"state\": \"ut\",\n  \"zip\": \"consequat\",\n  \"countryCode\": \"enim sit tempor\",\n  \"companySize\": \"in elit\",\n  \"regNumber\": \"ex in dolore\",\n  \"companyNumber\": \"magna enim\",\n  \"description\": \"Ut\",\n  \"url\": \"dolore amet\"\n }\n]"
								}
							]
						},
						{
							"name": "Update Contractor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const response=pm.response.json();\r",
											"pm.test(\"Update Successful\",()=>{\r",
											"pm.expect(response).is.not.null;\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"{{contractorId}}\",\r\n  \"code\": \"string\",\r\n  \"name\": \"string\",\r\n  \"phone\": \"string\",\r\n  \"switchCompany\": true,\r\n  \"logo\": \"string\",\r\n  \"vatId\": \"26ebadc8-802f-4c96-807a-5d875ab98ead\",\r\n  \"street\": \"string\",\r\n  \"city\": \"string\",\r\n  \"state\": \"string\",\r\n  \"zip\": \"string\",\r\n  \"countryCode\": \"string\",\r\n  \"companySize\": \"string\",\r\n  \"regNumber\": \"string\",\r\n  \"companyNumber\": \"string\",\r\n  \"description\": \"string\",\r\n  \"isActive\": true,\r\n  \"parentAccountId\": \"26ebadc8-802f-4c96-807a-5d875ab98ead\",\r\n  \"url\": \"string\",\r\n  \"targetId\": \"26ebadc8-802f-4c96-807a-5d875ab98ead\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Contractor/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Contractor",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Contractor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Contractor Deleted\", function () {\r",
											"    const response=pm.response.json();\r",
											"    pm.expect(response).is.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/Contractor/Delete?id={{contractorId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Contractor",
										"Delete"
									],
									"query": [
										{
											"key": "id",
											"value": "{{contractorId}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "WorkItemUsers (pending)",
					"item": [
						{
							"name": "Work Item Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response =pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"WorkItem added in the selected board\", function(){",
											"if (response.name != null){",
											"    if(response.boardId = pm.globals.get(\"BoardId\")){",
											"        console.log(\"New work item `\"+ response.name +\"` added in the selected board successfully\" )",
											"    }",
											"}",
											"});",
											"",
											"pm.test(\"Checking keys values not null\", function(){",
											"    for(let key of Object.keys(response)) {",
											"    if(key !=null){",
											"        console.log(key + \" value is: \"+ response[key]);",
											"    }else{",
											"        console.log(key +\" Value is: \"+ response[key]);",
											"    }",
											"}",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"boardId\": \"a57d53a9-c1fd-41ef-90ba-bb6de0d12b77\",\n    \"leadId\": \"e3c8769d-5791-4bfb-8a5d-286b33fe8c47\",\n    \"ownerId\": \"dcd8be29-19dc-483d-88bd-971d753c1fbf\",\n    \"contractorId\": \"026805d1-ccbf-4d42-a6d0-b205b0fe6c7b\",\n    \n    \"name\": \"yoshiMitsu\",\n    \"code\": \"est ut sint veniam\",\n    \"plannedCompletionDate\": \"1954-04-23T13:29:04.645Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/WorkItem/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"WorkItem",
										"Create"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"boardId\": \"in\",\n    \"leadId\": \"adipisicing\",\n    \"ownerId\": \"tempor\",\n    \"contractorId\": \"aute fugiat nulla commodo\",\n    \"parentId\": \"deserunt nostrud nulla\",\n    \"name\": \"aute laboris\",\n    \"code\": \"est ut sint veniam\",\n    \"plannedCompletionDate\": \"1954-04-23T13:29:04.645Z\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/WorkItem/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"WorkItem",
												"Create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"boardId\": \"in\",\n \"leadId\": \"adipisicing\",\n \"ownerId\": \"tempor\",\n \"contractorId\": \"aute fugiat nulla commodo\",\n \"parentId\": \"deserunt nostrud nulla\",\n \"name\": \"aute laboris\",\n \"code\": \"est ut sint veniam\",\n \"plannedCompletionDate\": \"1954-04-23T13:29:04.645Z\"\n}"
								}
							]
						},
						{
							"name": "Work Item Get List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response= pm.response.json();\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check the new item showing in the list of items\", function(){\r",
											"     let workItem = pm.globals.get(\"WorkItemName\") ;\r",
											"     let lastItem= response.length-1;\r",
											"        if(response[lastItem].name =workItem){\r",
											"            console.log(\"New work item \" +workItem+\" is showing in the list\");\r",
											"            //Getting New item Id\r",
											"            pm.globals.set(\"WorkItemId\", response[lastItem].id)\r",
											"        }\r",
											"})\r",
											"\r",
											"pm.test(\"Count the number of workItem in the board\", function () {\r",
											"    let workItems;\r",
											"    for(workItems =0 ; workItems<response.length; ){\r",
											"        if(response[workItems].id !=null){\r",
											"            workItems++\r",
											"        }\r",
											"    }\r",
											"    console.log(\"Number of workItem in the board is: \"+ workItems)\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/WorkItem/GetList?boardId={{BoardId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"WorkItem",
										"GetList"
									],
									"query": [
										{
											"key": "boardId",
											"value": "{{BoardId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/WorkItem/GetList?boardId=reprehenderit sunt incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"WorkItem",
												"GetList"
											],
											"query": [
												{
													"key": "boardId",
													"value": "reprehenderit sunt incididunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"incididunt tempor\",\n  \"boardId\": \"nulla aute proident quis\",\n  \"leadId\": \"velit irure tempor\",\n  \"ownerId\": \"laborum\",\n  \"contractorId\": \"Excepteur\",\n  \"parentId\": \"id cupidatat\",\n  \"name\": \"commodo reprehenderit nisi sunt consec\",\n  \"code\": \"dolor irure aute\",\n  \"plannedCompletionDate\": \"1967-04-18T13:03:58.485Z\",\n  \"workItemUsers\": [\n   {\n    \"userId\": \"ut laboris\",\n    \"workItemId\": \"tempor Duis elit\",\n    \"resourcetype\": 4,\n    \"user\": {\n     \"firstName\": \"Duis sed dolore\",\n     \"lastName\": \"id Ut nisi laborum\",\n     \"phone\": \"veniam deserunt Lorem\",\n     \"profileImage\": \"Lorem fugiat\",\n     \"imageUri\": \"nostrud tempor minim amet\"\n    }\n   },\n   {\n    \"userId\": \"in elit adipisicing mollit\",\n    \"workItemId\": \"consequat aute veniam ea\",\n    \"resourcetype\": 2,\n    \"user\": {\n     \"firstName\": \"enim nisi Lorem nostrud deserunt\",\n     \"lastName\": \"qui voluptate et\",\n     \"phone\": \"laboris esse\",\n     \"profileImage\": \"qui in\",\n     \"imageUri\": \"eu minim\"\n    }\n   }\n  ]\n },\n {\n  \"id\": \"pariatur minim\",\n  \"boardId\": \"labore commodo Ut dolore sed\",\n  \"leadId\": \"voluptate Duis sunt quis labore\",\n  \"ownerId\": \"nulla cupidatat\",\n  \"contractorId\": \"dolore et dolor nost\",\n  \"parentId\": \"est nulla Ut\",\n  \"name\": \"aliqua\",\n  \"code\": \"non officia\",\n  \"plannedCompletionDate\": \"2019-05-20T05:03:23.924Z\",\n  \"workItemUsers\": [\n   {\n    \"userId\": \"laboris aliquip aliqua culpa\",\n    \"workItemId\": \"incididunt esse \",\n    \"resourcetype\": 5,\n    \"user\": {\n     \"firstName\": \"consectetur esse in\",\n     \"lastName\": \"quis qui ex ut\",\n     \"phone\": \"eiusmod dolore ad Lorem\",\n     \"profileImage\": \"occaecat i\",\n     \"imageUri\": \"Lorem sint\"\n    }\n   },\n   {\n    \"userId\": \"adipisicing anim in\",\n    \"workItemId\": \"Duis voluptate nisi\",\n    \"resourcetype\": 4,\n    \"user\": {\n     \"firstName\": \"Ut velit occaecat\",\n     \"lastName\": \"Ut mollit amet anim\",\n     \"phone\": \"irure\",\n     \"profileImage\": \"in ipsum dolor voluptate\",\n     \"imageUri\": \"Duis Exce\"\n    }\n   }\n  ]\n }\n]"
								}
							]
						},
						{
							"name": "Work Item Get",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Checking selected work item displaying correctly\", function(){",
											"    let givenId = pm.globals.get(\"WorkItemId\")",
											"    if(givenId=pm.response.json().id){",
											"        console.log(\"Selected work item details showing correctly\")",
											"    }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "Authorization",
											"type": "string"
										},
										{
											"key": "value",
											"value": "<API Key>",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/WorkItem/Get?id={{WorkItemId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"WorkItem",
										"Get"
									],
									"query": [
										{
											"key": "id",
											"value": "{{WorkItemId}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/WorkItem/Get?id=reprehenderit sunt incididunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"WorkItem",
												"Get"
											],
											"query": [
												{
													"key": "id",
													"value": "reprehenderit sunt incididunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"laboris do ex incididunt\",\n \"boardId\": \"mollit voluptate\",\n \"leadId\": \"aute\",\n \"ownerId\": \"ullamco cupidatat\",\n \"contractorId\": \"dolore cillum commodo\",\n \"parentId\": \"adipisicing eu sint\",\n \"name\": \"esse ullamco\",\n \"code\": \"ullamco dolore anim officia id\",\n \"plannedCompletionDate\": \"1988-10-01T01:30:19.657Z\",\n \"workItemUsers\": [\n  {\n   \"userId\": \"velit ullamco\",\n   \"workItemId\": \"nisi eu do\",\n   \"resourcetype\": 3,\n   \"user\": {\n    \"firstName\": \"ad ex aliquip pariatur adipisicing\",\n    \"lastName\": \"ad\",\n    \"phone\": \"sint proident cupidatat\",\n    \"profileImage\": \"dolor labore in incididunt ut\",\n    \"imageUri\": \"officia magna elit\"\n   }\n  },\n  {\n   \"userId\": \"in consectetur non\",\n   \"workItemId\": \"irure eiusmod dolore\",\n   \"resourcetype\": 4,\n   \"user\": {\n    \"firstName\": \"amet dolor Excepteur\",\n    \"lastName\": \"proident ut\",\n    \"phone\": \"occaecat dolor\",\n    \"profileImage\": \"velit reprehenderit nisi id\",\n    \"imageUri\": \"dolore Lorem sint eu reprehenderit\"\n   }\n  }\n ]\n}"
								}
							]
						},
						{
							"name": "Work Item Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Checking selected work item updated correctly\", function(){",
											"    let nameOfWorkItemWhenCretaed = pm.globals.get(\"WorkItemName\");",
											"    let nameOfWorkItemAfterUpdated = pm.response.json().name;",
											"",
											"    if(nameOfWorkItemAfterUpdated !=nameOfWorkItemWhenCretaed){",
											"            console.log(\"Name of the item when created : \" +  nameOfWorkItemWhenCretaed);",
											"             console.log(\"Name of the item after updated : \" +  nameOfWorkItemAfterUpdated);",
											"             console.log(\"UPDATED SUCCESSFULLY\")",
											"        }",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{authToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"fd632048-79a7-4330-9a9d-f464a82aa1b4\",\n    \"boardId\": \"{{BoardId}}\",\n    \"leadId\": \"{{LeadId}}\",\n    \"ownerId\": \"{{OwnerId}}\",\n    \"contractorId\": \"{{ContractorId}}\",\n    \"parentId\": \"00000000-0000-0000-0000-000000000000\",\n    \"name\": \"Test User Updated\",\n    \"code\": \"est ut sint veniam\",\n    \"plannedCompletionDate\": \"1995-08-09T02:04:03.520Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/WorkItem/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"WorkItem",
										"Update"
									]
								}
							},
							"response": [
								{
									"name": "Untitled Example",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "Authorization",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"temp\",\n    \"boardId\": \"paria\",\n    \"leadId\": \"Excepteur qui aliqua consequat\",\n    \"ownerId\": \"ex minim\",\n    \"contractorId\": \"sint est minim magna\",\n    \"parentId\": \"laboris anim\",\n    \"name\": \"non nulla\",\n    \"code\": \"aute nulla nisi eiusmod\",\n    \"plannedCompletionDate\": \"1995-08-09T02:04:03.520Z\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/WorkItem/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"WorkItem",
												"Update"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"boardId\": \"in\",\n \"leadId\": \"adipisicing\",\n \"ownerId\": \"tempor\",\n \"contractorId\": \"aute fugiat nulla commodo\",\n \"parentId\": \"deserunt nostrud nulla\",\n \"name\": \"aute laboris\",\n \"code\": \"est ut sint veniam\",\n \"plannedCompletionDate\": \"1954-04-23T13:29:04.645Z\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://mobile.planloader.com/loader",
			"type": "string"
		}
	]
}